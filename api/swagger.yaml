openapi: 3.0.2
info:
  title: Okta API
  description: Allows customers to easily access the Okta API
  termsOfService: https://developer.okta.com/terms/
  contact:
    name: Okta Developer Team
    url: https://developer.okta.com/
    email: devex-public@okta.com
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.10.0
  x-logo:
    url: logo.svg
    backgroundColor: transparent
    altText: Okta Developer
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
servers:
- url: "https://{subdomain}.{domain}"
  variables:
    subdomain:
      description: The subdomain of your organization
      default: your-subdomain
    domain:
      description: The okta domain of your organization.
      enum:
      - okta.com
      - oktapreview.com
      - okta-emea.com
      default: okta.com
- url: "https://{customDomain}"
  variables:
    customDomain:
      description: The custom domain configured for your organization
      default: auth.your-custom-domain.com
tags:
- name: Application
- name: Authenticator
- name: AuthorizationServer
- name: Brand
- name: CAPTCHA
- name: Domain
- name: EventHook
- name: Feature
- name: Group
- name: IdentityProvider
- name: InlineHook
- name: SystemLog
- name: ProfileMapping
- name: UserType
- name: Schema
- name: LinkedObject
- name: OrgSetting
- name: Policy
- name: Session
- name: Subscription
- name: Template
- name: ThreatInsight
- name: TrustedOrigin
- name: User
- name: UserFactor
- name: NetworkZone
paths:
  /api/v1/apps:
    get:
      tags:
      - Application
      summary: List Applications
      description: Enumerates apps added to your organization with pagination. A subset
        of apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of apps
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of results for a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      - name: filter
        in: query
        description: "Filters apps by status, user.id, group.id or credentials.signing.kid\
          \ expression"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: Traverses users link relationship and optionally embeds Application
          User resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeNonDeleted
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    post:
      tags:
      - Application
      summary: Add Application
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
      - name: activate
        in: query
        description: Executes activation lifecycle operation when creating the app
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: OktaAccessGateway-Agent
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: application
  /api/v1/apps/{appId}:
    get:
      tags:
      - Application
      summary: Get Application
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    put:
      tags:
      - Application
      summary: Update Application
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: application
    delete:
      tags:
      - Application
      summary: Delete Application
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/connections/default:
    get:
      tags:
      - Application
      summary: Fetches the default Provisioning Connection for an application.
      description: Get default Provisioning Connection for application
      operationId: getDefaultProvisioningConnectionForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    post:
      tags:
      - Application
      summary: Sets the default Provisioning Connection for an application.
      description: Set default Provisioning Connection for application
      operationId: setDefaultProvisioningConnectionForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: activate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConnectionRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    post:
      tags:
      - Application
      summary: Activate default Provisioning Connection for application
      description: Activates the default Provisioning Connection for an application.
      operationId: activateDefaultProvisioningConnectionForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    post:
      tags:
      - Application
      summary: Deactivate default Provisioning Connection for application
      description: Deactivates the default Provisioning Connection for an application.
      operationId: deactivateDefaultProvisioningConnectionForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/credentials/csrs:
    get:
      tags:
      - Application
      summary: List Certificate Signing Requests for Application
      description: Enumerates Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    post:
      tags:
      - Application
      summary: Generate Certificate Signing Request for Application
      description: Generates a new key pair and returns the Certificate Signing Request
        for it.
      operationId: generateCsrForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: metadata
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    get:
      tags:
      - Application
      summary: Get Certificate Signing Request
      description: Fetches a certificate signing request for the app by `id`.
      operationId: getCsrForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    delete:
      tags:
      - Application
      summary: Revoke Certificate Signing Request
      description: Revokes a certificate signing request and deletes the key pair
        from the application.
      operationId: revokeCsrFromApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      tags:
      - Application
      summary: Publish Certificate Signing Request
      description: Updates a certificate signing request for the app with a signed
        X.509 certificate and adds it into the application key credentials
      operationId: publishCsrFromApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          application/x-x509-ca-cert:
            schema:
              $ref: '#/components/schemas/lifecycle_publish_body'
          application/pkix-cert:
            schema:
              $ref: '#/components/schemas/lifecycle_publish_body_1'
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCert
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/credentials/keys:
    get:
      tags:
      - Application
      summary: List Key Credentials for Application
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
  /api/v1/apps/{appId}/credentials/keys/generate:
    post:
      tags:
      - Application
      summary: Generate Key Credential for Application
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: validityYears
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      tags:
      - Application
      summary: Get Key Credential for Application
      description: Gets a specific application key credential by kid
      operationId: getApplicationKey
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      tags:
      - Application
      summary: Clone Application Key Credential
      description: Clones a X.509 certificate for an application key credential from
        a source application to target application.
      operationId: cloneApplicationKey
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetAid
        in: query
        description: Unique key of the target Application
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/features:
    get:
      tags:
      - Application
      summary: Fetches the Feature objects for an application.
      description: List Features for application
      operationId: listFeaturesForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationFeature'
                x-content-type: application/json
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
  /api/v1/apps/{appId}/features/{name}:
    get:
      tags:
      - Application
      summary: Fetches a Feature object for an application.
      description: Fetches a Feature object for an application.
      operationId: getFeatureForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    put:
      tags:
      - Application
      summary: Updates a Feature object for an application.
      description: Updates a Feature object for an application.
      operationId: updateFeatureForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilitiesObject'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/grants:
    get:
      tags:
      - Application
      summary: List Scope Consent Grants for Application
      description: Lists all scope consent grants for the application
      operationId: listScopeConsentGrants
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                x-content-type: application/json
      security:
      - api_token: []
    post:
      tags:
      - Application
      summary: Grant Consent to Scope for Application
      description: Grants consent for the application to request an OAuth 2.0 Okta
        scope
      operationId: grantConsentToScope
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      security:
      - api_token: []
      x-codegen-request-body-name: oAuth2ScopeConsentGrant
  /api/v1/apps/{appId}/grants/{grantId}:
    get:
      tags:
      - Application
      summary: Get Scope Consent Grant for Application
      description: Fetches a single scope consent grant for the application
      operationId: getScopeConsentGrant
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: grantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      security:
      - api_token: []
    delete:
      tags:
      - Application
      summary: Revoke Scope Consent Grant for Application
      description: Revokes permission for the application to request the given scope
      operationId: revokeScopeConsentGrant
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: grantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
  /api/v1/apps/{appId}/groups:
    get:
      tags:
      - Application
      summary: List Groups Assigned to Application
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of assignments
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of results for a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
  /api/v1/apps/{appId}/groups/{groupId}:
    get:
      tags:
      - Application
      summary: Get Assigned Group for Application
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    put:
      tags:
      - Application
      summary: Assign Group to Application
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: applicationGroupAssignment
    delete:
      tags:
      - Application
      summary: Remove Group from Application
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      tags:
      - Application
      summary: Activate Application
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      tags:
      - Application
      summary: Deactivate Application
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/logo:
    post:
      tags:
      - Application
      summary: "The file must be in PNG, JPG, or GIF format, and less than 1 MB in\
        \ size. For best results use landscape orientation, a transparent background,\
        \ and a minimum size of 420px by 120px to prevent upscaling."
      description: Update the logo for an application.
      operationId: uploadApplicationLogo
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/appId_logo_body'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/tokens:
    get:
      tags:
      - Application
      summary: Lists OAuth 2.0 Tokens for Application
      description: Lists all tokens for the application
      operationId: listOAuth2TokensForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Token'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    delete:
      tags:
      - Application
      summary: Revoke All OAuth 2.0 Tokens for Application
      description: Revokes all tokens for the specified application
      operationId: revokeOAuth2TokensForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/tokens/{tokenId}:
    get:
      tags:
      - Application
      summary: Get OAuth 2.0 Token for Application
      description: Gets a token for the specified application
      operationId: getOAuth2TokenForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    delete:
      tags:
      - Application
      summary: Revoke an OAuth 2.0 Token for Application
      description: Revokes the specified token for the specified application
      operationId: revokeOAuth2TokenForApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/apps/{appId}/users:
    get:
      tags:
      - Application
      summary: List Users Assigned to Application
      description: "Enumerates all assigned [application users](#application-user-model)\
        \ for an application."
      operationId: listApplicationUsers
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: query_scope
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: specifies the pagination cursor for the next page of assignments
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: specifies the number of results for a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppUser'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    post:
      tags:
      - Application
      summary: Assign User to Application for SSO & Provisioning
      description: "Assigns an user to an application with [credentials](#application-user-credentials-object)\
        \ and an app-specific [profile](#application-user-profile-object). Profile\
        \ mappings defined for the application are first applied before applying any\
        \ profile properties specified in the request."
      operationId: assignUserToApplication
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: appUser
  /api/v1/apps/{appId}/users/{userId}:
    get:
      tags:
      - Application
      summary: Get Assigned User for Application
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.read
    post:
      tags:
      - Application
      summary: Update Application Profile for Assigned User
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
      x-codegen-request-body-name: appUser
    delete:
      tags:
      - Application
      summary: Remove User from Application
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
      - name: appId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        x-okta-added-version: 1.5.0
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/authenticators:
    get:
      tags:
      - Authenticator
      summary: List Authenticators
      description: Enumerates authenticators in your organization.
      operationId: listAuthenticators
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authenticator'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authenticators.read
  /api/v1/authenticators/{authenticatorId}:
    get:
      tags:
      - Authenticator
      summary: Get Authenticator
      description: Fetches an authenticator from your Okta organization by `authenticatorId`.
      operationId: getAuthenticator
      parameters:
      - name: authenticatorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
      security:
      - api_token: []
      - oauth2:
        - okta.authenticators.read
    put:
      tags:
      - Authenticator
      summary: Update Authenticator
      description: Updates an authenticator
      operationId: updateAuthenticator
      parameters:
      - name: authenticatorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
      security:
      - api_token: []
      - oauth2:
        - okta.authenticators.manage
      x-codegen-request-body-name: authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    post:
      tags:
      - Authenticator
      summary: Activate Authenticator
      description: Activates an authenticator by `authenticatorId`.
      operationId: activateAuthenticator
      parameters:
      - name: authenticatorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
      security:
      - api_token: []
      - oauth2:
        - okta.authenticators.manage
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    post:
      tags:
      - Authenticator
      summary: Deactivate Authenticator
      description: Deactivates an authenticator by `authenticatorId`.
      operationId: deactivateAuthenticator
      parameters:
      - name: authenticatorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
      security:
      - api_token: []
      - oauth2:
        - okta.authenticators.manage
  /api/v1/authorizationServers:
    get:
      tags:
      - AuthorizationServer
      summary: List Authorization Servers
      description: Success
      operationId: listAuthorizationServers
      parameters:
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    post:
      tags:
      - AuthorizationServer
      summary: Create Authorization Server
      description: Success
      operationId: createAuthorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        "201":
          description: Created
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: authorizationServer
  /api/v1/authorizationServers/{authServerId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Authorization Server
      description: Success
      operationId: getAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    put:
      tags:
      - AuthorizationServer
      summary: Update Authorization Server
      description: Success
      operationId: updateAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: authorizationServer
    delete:
      tags:
      - AuthorizationServer
      summary: Delete Authorization Server
      description: Success
      operationId: deleteAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/claims:
    get:
      tags:
      - AuthorizationServer
      summary: List Custom OAuth 2.0 Token Claims
      description: Success
      operationId: listOAuth2Claims
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Claim'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    post:
      tags:
      - AuthorizationServer
      summary: Create Custom OAuth 2.0 Token Claim
      description: Success
      operationId: createOAuth2Claim
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        "201":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: oAuth2Claim
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Oauth2claim
      description: Success
      operationId: getOAuth2Claim
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: claimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    put:
      tags:
      - AuthorizationServer
      summary: Update Custom OAuth 2.0 Token Claim
      description: Success
      operationId: updateOAuth2Claim
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: claimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: oAuth2Claim
    delete:
      tags:
      - AuthorizationServer
      summary: Delete Custom OAuth 2.0 Token Claim
      description: Success
      operationId: deleteOAuth2Claim
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: claimId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/clients:
    get:
      tags:
      - AuthorizationServer
      summary: List Oauth2clients for Authorization Server
      description: Success
      operationId: listOAuth2ClientsForAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    get:
      tags:
      - AuthorizationServer
      summary: List Refresh Tokens for Authorization Server and Client
      description: Success
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    delete:
      tags:
      - AuthorizationServer
      summary: Revoke Refresh Tokens for Authorization Server and Client
      description: Success
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Refresh Token for Authorization Server and Client
      description: Success
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    delete:
      tags:
      - AuthorizationServer
      summary: Revoke Refresh Token for Authorization Server and Client
      description: Success
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    get:
      tags:
      - AuthorizationServer
      summary: List Authorization Server Keys
      description: Success
      operationId: listAuthorizationServerKeys
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    post:
      tags:
      - AuthorizationServer
      summary: Rotate Authorization Server Keys
      description: Success
      operationId: rotateAuthorizationServerKeys
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: use
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    post:
      tags:
      - AuthorizationServer
      summary: Activate Authorization Server
      description: Success
      operationId: activateAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    post:
      tags:
      - AuthorizationServer
      summary: Deactivate Authorization Server
      description: Success
      operationId: deactivateAuthorizationServer
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies:
    get:
      tags:
      - AuthorizationServer
      summary: List Authorization Server Policies
      description: Success
      operationId: listAuthorizationServerPolicies
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    post:
      tags:
      - AuthorizationServer
      summary: Create Authorization Server Policy
      description: Success
      operationId: createAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        "201":
          description: Created
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: policy
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Authorization Server Policy
      description: Success
      operationId: getAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    put:
      tags:
      - AuthorizationServer
      summary: Update Authorization Server Policy
      description: Success
      operationId: updateAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: policy
    delete:
      tags:
      - AuthorizationServer
      summary: Delete Authorization Server Policy
      description: Success
      operationId: deleteAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    post:
      tags:
      - AuthorizationServer
      summary: Activate Authorization Server Policy
      description: Activate Authorization Server Policy
      operationId: activateAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    post:
      tags:
      - AuthorizationServer
      summary: Deactivate Authorization Server Policy
      description: Deactivate Authorization Server Policy
      operationId: deactivateAuthorizationServerPolicy
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    get:
      tags:
      - AuthorizationServer
      summary: List Authorization Server Policy Rules
      description: Enumerates all policy rules for the specified Custom Authorization
        Server and Policy.
      operationId: listAuthorizationServerPolicyRules
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    post:
      tags:
      - AuthorizationServer
      summary: Create Authorization Server Policy Rule
      description: Creates a policy rule for the specified Custom Authorization Server
        and Policy.
      operationId: createAuthorizationServerPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: policyRule
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Authorization Server Policy Rule
      description: Returns a Policy Rule by ID that is defined in the specified Custom
        Authorization Server and Policy.
      operationId: getAuthorizationServerPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    put:
      tags:
      - AuthorizationServer
      summary: Update Authorization Server Policy Rule
      description: Updates the configuration of the Policy Rule defined in the specified
        Custom Authorization Server and Policy.
      operationId: updateAuthorizationServerPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: policyRule
    delete:
      tags:
      - AuthorizationServer
      summary: Delete Authorization Server Policy Rule
      description: Deletes a Policy Rule defined in the specified Custom Authorization
        Server and Policy.
      operationId: deleteAuthorizationServerPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      tags:
      - AuthorizationServer
      summary: Activate Authorization Server Policy Rule
      description: Activate Authorization Server Policy Rule
      operationId: activateAuthorizationServerPolicyRule
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      tags:
      - AuthorizationServer
      summary: Deactivate Authorization Server Policy Rule
      description: Deactivate Authorization Server Policy Rule
      operationId: deactivateAuthorizationServerPolicyRule
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/authorizationServers/{authServerId}/scopes:
    get:
      tags:
      - AuthorizationServer
      summary: List Oauth2scopes
      description: Success
      operationId: listOAuth2Scopes
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cursor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Scope'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    post:
      tags:
      - AuthorizationServer
      summary: Create Oauth2scope
      description: Success
      operationId: createOAuth2Scope
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        "201":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: oAuth2Scope
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    get:
      tags:
      - AuthorizationServer
      summary: Get Oauth2scope
      description: Success
      operationId: getOAuth2Scope
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scopeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.read
    put:
      tags:
      - AuthorizationServer
      summary: Update Oauth2scope
      description: Success
      operationId: updateOAuth2Scope
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scopeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
      x-codegen-request-body-name: oAuth2Scope
    delete:
      tags:
      - AuthorizationServer
      summary: Delete Oauth2scope
      description: Success
      operationId: deleteOAuth2Scope
      parameters:
      - name: authServerId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scopeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.authorizationServers.manage
  /api/v1/brands:
    get:
      tags:
      - Brand
      summary: List Brands
      description: List all the brands in your org.
      operationId: listBrands
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.brands.read
  /api/v1/brands/{brandId}:
    get:
      tags:
      - Brand
      summary: Get Brand
      description: Fetches a brand by `brandId`
      operationId: getBrand
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.read
    put:
      tags:
      - Brand
      summary: Update Brand
      description: Updates a brand by `brandId`
      operationId: updateBrand
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
      x-codegen-request-body-name: brand
  /api/v1/brands/{brandId}/templates/email:
    get:
      tags:
      - Brand
      summary: List Email Templates
      description: List email templates in your organization with pagination.
      operationId: listEmailTemplates
      parameters:
      - name: brandId
        in: path
        description: brand id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of email templates.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of results returned (maximum 200)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      responses:
        "200":
          description: Successfully fetch a list of email templates.
          headers:
            Link:
              description: Links to the current and next page of results.
              style: simple
              explode: false
              schema:
                type: string
                example: "<http://oienapa.okta1.com:1802/api/v1/brands/{brandId}/templates/email?limit=200>;\
                  \ rel=\"self\""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailTemplate'
                x-content-type: application/json
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    get:
      tags:
      - Brand
      summary: Get Email Template
      description: Fetch an email template by `templateName`
      operationId: getEmailTemplate
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully fetch an email template by name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    get:
      tags:
      - Brand
      summary: List Email Customizations
      description: List all email customcations for an email template
      operationId: getAllEmailCustomizations
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully fetch all email customizations of a given email
            template name.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailCustomizationResponse'
                x-content-type: application/json
      security:
      - api_token: []
    post:
      tags:
      - Brand
      summary: Create Email Customization
      description: Create an email customization
      operationId: createEmailCustomization
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
      responses:
        "201":
          description: "If success, return the created email customization"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomizationResponse'
        "409":
          description: The email customization could not be created because it conflicts
            with an existing email customization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      x-codegen-request-body-name: instance
    delete:
      tags:
      - Brand
      summary: Delete Email Customizations
      description: Delete all customizations for an email template. Also known as
        “Reset to Default”.
      operationId: deleteAllCustomizations
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfully deletes all customizations for an email template.
          content: {}
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    get:
      tags:
      - Brand
      summary: Get Email Customization
      description: Fetch an email customization by `id`.
      operationId: getEmailCustomization
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully get an email template's customization by `id`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomizationResponse'
      security:
      - api_token: []
    put:
      tags:
      - Brand
      summary: Update Email Customization
      description: Update an email customization
      operationId: updateEmailCustomization
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
      responses:
        "200":
          description: "If update successfully, return the updated email customization"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomizationResponse'
        "409":
          description: The email customization could not be updated because the update
            would cause a conflict with an existing email customization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      x-codegen-request-body-name: instance
    delete:
      tags:
      - Brand
      summary: Delete Email Customization
      description: Delete an email customization
      operationId: deleteEmailCustomization
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Successfully delete an email customization by `id`
          content: {}
        "409":
          description: The email customization could not be deleted because it is
            the default email customization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    get:
      tags:
      - Brand
      summary: Get Preview Content of Email Customization
      description: Get a preview of an email template customization.
      operationId: previewEmailCustomizationContent
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customizationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully fetch the preview content of an email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    get:
      tags:
      - Brand
      summary: Get Default Content of Email Template
      description: Fetch the default content for an email template.
      operationId: getEmailTemplateDefaultContent
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully fetch the default content for an email template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    get:
      tags:
      - Brand
      summary: Get Preview of Email Template Default Content
      description: Fetch a preview of an email template's default content by populating
        velocity references with the current user's environment.
      operationId: previewEmailDefaultContent
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ' Successfully fetch the preview of an email template''s default
            content.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
      security:
      - api_token: []
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    post:
      tags:
      - Brand
      summary: Send Test Email
      description: |-
        Send a test email to the current user’s primary and secondary email addresses. The email content is selected based on the following priority:
        1. An email customization specifically for the user’s locale.
        2. The default language of email customizations.
        3. The email template’s default content.
      operationId: sendTestEmailFromTemplate
      parameters:
      - name: templateName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTestResponse'
            examples:
              example-1:
                value:
                  customizationId: oel11u6DqUiMbQkpl0g4
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
  /api/v1/brands/{brandId}/themes:
    get:
      tags:
      - Brand
      summary: Get Brand Themes
      description: List all the themes in your brand
      operationId: listBrandThemes
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeResponse'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.brands.read
  /api/v1/brands/{brandId}/themes/{themeId}:
    get:
      tags:
      - Brand
      summary: Get a theme for a brand
      description: Fetches a theme for a brand
      operationId: getBrandTheme
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.read
    put:
      tags:
      - Brand
      summary: Update a theme for a brand
      description: Updates a theme for a brand
      operationId: updateBrandTheme
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
      x-codegen-request-body-name: theme
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    post:
      tags:
      - Brand
      summary: Updates the background image for your Theme
      description: Updates the background image for your Theme
      operationId: uploadBrandThemeBackgroundImage
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: background image file
        content:
          multipart/form-data:
            schema:
              type: object
              description: "The file must be in PNG, JPG, or GIF format and less than\
                \ 2 MB in size."
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
    delete:
      tags:
      - Brand
      summary: Deletes a Theme background image
      description: Deletes a Theme background image
      operationId: deleteBrandThemeBackgroundImage
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    post:
      tags:
      - Brand
      summary: Updates the favicon for your theme
      description: Updates the favicon for your theme
      operationId: uploadBrandThemeFavicon
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: favicon file
        content:
          multipart/form-data:
            schema:
              type: object
              description: "The file must be in PNG, or ico format and less than ??\
                \ in size and 128 x 128 dimensions"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
    delete:
      tags:
      - Brand
      summary: Deletes a Theme favicon. The org then uses the Okta default favicon.
      description: Deletes a Theme favicon. The org then uses the Okta default favicon.
      operationId: deleteBrandThemeFavicon
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    post:
      tags:
      - Brand
      summary: Update a themes logo
      description: Updates the logo for your Theme
      operationId: uploadBrandThemeLogo
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: logo file
        content:
          multipart/form-data:
            schema:
              type: object
              description: "The file must be in PNG, JPG, or GIF format and less than\
                \ 100kB in size. For best results use landscape orientation, a transparent\
                \ background, and a minimum size of 300px by 50px to prevent upscaling."
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
    delete:
      tags:
      - Brand
      summary: Deletes a Theme logo. The org then uses the Okta default logo.
      description: Deletes a Theme logo. The org then uses the Okta default logo.
      operationId: deleteBrandThemeLogo
      parameters:
      - name: brandId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - api_token: []
      - oauth2:
        - okta.brands.manage
  /api/v1/captchas:
    get:
      tags:
      - CAPTCHA
      summary: List CAPTCHA instances
      description: Enumerates CAPTCHA instances in your organization with pagination.
        A subset of CAPTCHA instances can be returned that match a supported filter
        expression or query.
      operationId: listCaptchaInstances
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CAPTCHAInstance'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.read
    post:
      tags:
      - CAPTCHA
      summary: Create new CAPTCHA instance
      description: "Adds a new CAPTCHA instance to your organization. In the current\
        \ release, we only allow one CAPTCHA instance per org."
      operationId: createCaptchaInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error Limit of One CAPTCHA instance per org:
                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.manage
      x-codegen-request-body-name: instance
  /api/v1/captchas/{captchaId}:
    get:
      tags:
      - CAPTCHA
      summary: Get CAPTCHA Instance
      description: Fetches a CAPTCHA instance by `id`.
      operationId: getCaptchaInstance
      parameters:
      - name: captchaId
        in: path
        description: id of the CAPTCHA
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: abcd1234
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.read
    put:
      tags:
      - CAPTCHA
      summary: Update CAPTCHA instance
      description: Update a CAPTCHA instance by `id`.
      operationId: updateCaptchaInstance
      parameters:
      - name: captchaId
        in: path
        description: id of the CAPTCHA
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: abcd1234
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.manage
      x-codegen-request-body-name: instance
    post:
      tags:
      - CAPTCHA
      summary: Partial Update CAPTCHA instance
      description: Partially update a CAPTCHA instance by `id`.
      operationId: partialUpdateCaptchaInstance
      parameters:
      - name: captchaId
        in: path
        description: id of the CAPTCHA
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: abcd1234
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.manage
      x-codegen-request-body-name: instance
    delete:
      tags:
      - CAPTCHA
      summary: Delete CAPTCHA Instance
      description: "Delete a CAPTCHA instance by `id`. If the CAPTCHA instance is\
        \ currently being used in the org, the delete will not be allowed."
      operationId: deleteCaptchaInstance
      parameters:
      - name: captchaId
        in: path
        description: id of the CAPTCHA
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: abcd1234
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot remove CAPTCHA in use:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
      security:
      - api_token: []
      - oauth2:
        - okta.captchas.manage
  /api/v1/domains:
    get:
      tags:
      - Domain
      summary: List Domains
      description: List all verified custom Domains for the org.
      operationId: listDomains
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.domains.read
    post:
      tags:
      - Domain
      summary: Create Domain
      description: Creates your domain.
      operationId: createDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.domains.manage
      x-codegen-request-body-name: domain
  /api/v1/domains/{domainId}:
    get:
      tags:
      - Domain
      summary: Get Domain
      description: Fetches a Domain by `id`.
      operationId: getDomain
      parameters:
      - name: domainId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.domains.read
    delete:
      tags:
      - Domain
      summary: Delete Domain
      description: Deletes a Domain by `id`.
      operationId: deleteDomain
      parameters:
      - name: domainId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.domains.manage
  /api/v1/domains/{domainId}/certificate:
    put:
      tags:
      - Domain
      summary: Create Certificate
      description: Creates the Certificate for the Domain.
      operationId: createCertificate
      parameters:
      - name: domainId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.domains.manage
      x-codegen-request-body-name: certificate
  /api/v1/domains/{domainId}/verify:
    post:
      tags:
      - Domain
      summary: Verify Domain
      description: Verifies the Domain by `id`.
      operationId: verifyDomain
      parameters:
      - name: domainId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.domains.manage
  /api/v1/eventHooks:
    get:
      tags:
      - EventHook
      summary: List Event Hooks
      description: Success
      operationId: listEventHooks
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.read
    post:
      tags:
      - EventHook
      summary: Create Event Hook
      description: Success
      operationId: createEventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
      x-codegen-request-body-name: eventHook
  /api/v1/eventHooks/{eventHookId}:
    get:
      tags:
      - EventHook
      summary: Get Event Hook
      description: Success
      operationId: getEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.read
    put:
      tags:
      - EventHook
      summary: Update Event Hook
      description: Success
      operationId: updateEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
      x-codegen-request-body-name: eventHook
    delete:
      tags:
      - EventHook
      summary: Delete Event Hook
      description: Success
      operationId: deleteEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      tags:
      - EventHook
      summary: Activate Event Hook
      description: Success
      operationId: activateEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      tags:
      - EventHook
      summary: Deactivate Event Hook
      description: Success
      operationId: deactivateEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      tags:
      - EventHook
      summary: Verify Event Hook
      description: Success
      operationId: verifyEventHook
      parameters:
      - name: eventHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
      security:
      - api_token: []
      - oauth2:
        - okta.eventHooks.manage
  /api/v1/features:
    get:
      tags:
      - Feature
      summary: List Features
      description: Success
      operationId: listFeatures
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
                x-content-type: application/json
      security:
      - api_token: []
  /api/v1/features/{featureId}:
    get:
      tags:
      - Feature
      summary: Get Feature
      description: Success
      operationId: getFeature
      parameters:
      - name: featureId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      security:
      - api_token: []
  /api/v1/features/{featureId}/dependencies:
    get:
      tags:
      - Feature
      summary: List Feature Dependencies
      description: Success
      operationId: listFeatureDependencies
      parameters:
      - name: featureId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
                x-content-type: application/json
      security:
      - api_token: []
  /api/v1/features/{featureId}/dependents:
    get:
      tags:
      - Feature
      summary: List Feature Dependents
      description: Success
      operationId: listFeatureDependents
      parameters:
      - name: featureId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
                x-content-type: application/json
      security:
      - api_token: []
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      tags:
      - Feature
      summary: Update Feature Lifecycle
      description: Success
      operationId: updateFeatureLifecycle
      parameters:
      - name: featureId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: lifecycle
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      security:
      - api_token: []
  /api/v1/groups:
    get:
      tags:
      - Group
      summary: List Groups
      description: Enumerates groups in your organization with pagination. A subset
        of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
      - name: q
        in: query
        description: Searches the name property of groups for matching value
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: Filter expression for groups
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of groups
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of group results in a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10000
      - name: expand
        in: query
        description: "If specified, it causes additional metadata to be included in\
          \ the response."
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
    post:
      tags:
      - Group
      summary: Add Group
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
      x-codegen-request-body-name: group
  /api/v1/groups/rules:
    get:
      tags:
      - Group
      summary: List Group Rules
      description: Lists all group rules for your organization.
      operationId: listGroupRules
      parameters:
      - name: limit
        in: query
        description: Specifies the number of rule results in a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of rules
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: Specifies the keyword to search fules for
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: "If specified as `groupIdToGroupNameMap`, then show group names"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-okta-added-version: 1.3.0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupRule'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
    post:
      tags:
      - Group
      summary: Create Group Rule
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: createGroupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}:
    get:
      tags:
      - Group
      summary: Get Group Rule
      description: Fetches a specific group rule by id from your organization
      operationId: getGroupRule
      parameters:
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
    put:
      tags:
      - Group
      summary: Update Group Rule
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: updateGroupRule
      parameters:
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
      x-codegen-request-body-name: groupRule
    delete:
      tags:
      - Group
      summary: Delete a group Rule
      description: Removes a specific group rule by id from your organization
      operationId: deleteGroupRule
      parameters:
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: removeUsers
        in: query
        description: Indicates whether to keep or remove users from groups assigned
          by this rule.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "202":
          description: Accepted
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      tags:
      - Group
      summary: Activate a group Rule
      description: Activates a specific group rule by id from your organization
      operationId: activateGroupRule
      parameters:
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      tags:
      - Group
      summary: Deactivate a group Rule
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateGroupRule
      parameters:
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
  /api/v1/groups/{groupId}:
    get:
      tags:
      - Group
      summary: List Group Rules
      description: Fetches a group from your organization.
      operationId: getGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
    put:
      tags:
      - Group
      summary: Update Group
      description: Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
      x-codegen-request-body-name: group
    delete:
      tags:
      - Group
      summary: Remove Group
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
  /api/v1/groups/{groupId}/apps:
    get:
      tags:
      - Group
      summary: List Assigned Applications
      description: Enumerates all applications that are assigned to a group.
      operationId: listAssignedApplicationsForGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of apps
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of app results for a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
  /api/v1/groups/{groupId}/roles:
    get:
      tags:
      - Group
      summary: List Group Assigned Roles
      description: Success
      operationId: listGroupAssignedRoles
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
    post:
      tags:
      - Group
      summary: Assign Role to Group
      description: Assigns a Role to a Group
      operationId: assignRoleToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: disableNotifications
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        "201":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
      x-codegen-request-body-name: assignRoleRequest
  /api/v1/groups/{groupId}/roles/{roleId}:
    get:
      tags:
      - Group
      summary: Get Role
      description: Success
      operationId: getRole
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
    delete:
      tags:
      - Group
      summary: Remove Role from Group
      description: Unassigns a Role from a Group
      operationId: removeRoleFromGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      tags:
      - Group
      summary: List Application Targets for Application Administrator Role for Group
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a Group.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    put:
      tags:
      - Group
      summary: Add Application Target to Admin Role Given to Group
      description: Success
      operationId: addApplicationTargetToAdminRoleGivenToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - Group
      summary: Remove Application Target from Application Administrator Role Given
        to Group
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    put:
      tags:
      - Group
      summary: Add App Instance Target to App Administrator Role given to a Group
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: applicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - Group
      summary: Remove App Instance Target to App Administrator Role given to a Group
      description: Remove App Instance Target to App Administrator Role given to a
        Group
      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: applicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      tags:
      - Group
      summary: List Group Targets for Group Role
      description: Enumerates group targets for a group role.
      operationId: listGroupTargetsForGroupRole
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    put:
      tags:
      - Group
      summary: Add Group Target for Group Role
      description: Enumerates group targets for a group role.
      operationId: addGroupTargetToGroupAdministratorRoleForGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - Group
      summary: Delete Group Target for Group Role
      description: remove group target for a group role.
      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetGroupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - oauth2:
        - okta.roles.manage
  /api/v1/groups/{groupId}/users:
    get:
      tags:
      - Group
      summary: List Group Members
      description: Enumerates all users that are a member of a group.
      operationId: listGroupUsers
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of users
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of user results in a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.groups.read
  /api/v1/groups/{groupId}/users/{userId}:
    put:
      tags:
      - Group
      summary: Add User to Group
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: addUserToGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
    delete:
      tags:
      - Group
      summary: Remove User from Group
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: removeUserFromGroup
      parameters:
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.groups.manage
  /api/v1/idps:
    get:
      tags:
      - IdentityProvider
      summary: List Identity Providers
      description: Enumerates IdPs in your organization with pagination. A subset
        of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
      - name: q
        in: query
        description: Searches the name property of IdPs for matching value
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of IdPs
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of IdP results in a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      - name: type
        in: query
        description: Filters IdPs by type
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    post:
      tags:
      - IdentityProvider
      summary: Add Identity Provider
      description: Adds a new IdP to your organization.
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
      x-codegen-request-body-name: identityProvider
  /api/v1/idps/credentials/keys:
    get:
      tags:
      - IdentityProvider
      summary: List Identity Provider Keys
      description: Enumerates IdP key credentials.
      operationId: listIdentityProviderKeys
      parameters:
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of keys
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of key results in a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    post:
      tags:
      - IdentityProvider
      summary: Add X.509 Certificate Public Key for Identity Providers
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
      x-codegen-request-body-name: jsonWebKey
  /api/v1/idps/credentials/keys/{keyId}:
    get:
      tags:
      - IdentityProvider
      summary: Get Identity Provider Key
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    delete:
      tags:
      - IdentityProvider
      summary: Delete Key
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP.
      operationId: deleteIdentityProviderKey
      parameters:
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}:
    get:
      tags:
      - IdentityProvider
      summary: Get Identity Provider
      description: Fetches an IdP by `id`.
      operationId: getIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    put:
      tags:
      - IdentityProvider
      summary: Update Identity Provider
      description: Updates the configuration for an IdP.
      operationId: updateIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
      x-codegen-request-body-name: identityProvider
    delete:
      tags:
      - IdentityProvider
      summary: Delete Identity Provider
      description: Removes an IdP from your organization.
      operationId: deleteIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      tags:
      - IdentityProvider
      summary: List Certificate Signing Requests for IdP
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    post:
      tags:
      - IdentityProvider
      summary: Generate Certificate Signing Request for IdP
      description: Generates a new key pair and returns a Certificate Signing Request
        for it.
      operationId: generateCsrForIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
      x-codegen-request-body-name: metadata
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
    get:
      tags:
      - IdentityProvider
      summary: Get Csr for Identity Provider
      description: Gets a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    delete:
      tags:
      - IdentityProvider
      summary: Revoke Csr for Identity Provider
      description: Revoke a Certificate Signing Request and delete the key pair from
        the IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      tags:
      - IdentityProvider
      summary: Publish Csr for Identity Provider
      description: Update the Certificate Signing Request with a signed X.509 certificate
        and add it into the signing key credentials for the IdP.
      operationId: publishCsrForIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: csrId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
          application/x-x509-ca-cert:
            schema:
              $ref: '#/components/schemas/lifecycle_publish_body_2'
          application/pkix-cert:
            schema:
              $ref: '#/components/schemas/lifecycle_publish_body_3'
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      tags:
      - IdentityProvider
      summary: List Signing Key Credentials for IdP
      description: Enumerates signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      tags:
      - IdentityProvider
      summary: Generate New IdP Signing Key Credential
      description: Generates a new X.509 certificate for an IdP signing key credential
        to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: validityYears
        in: query
        description: expiry of the IdP Key Credential
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/credentials/keys/{keyId}:
    get:
      tags:
      - IdentityProvider
      summary: Get Signing Key Credential for IdP
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
    post:
      tags:
      - IdentityProvider
      summary: Clone Signing Key Credential for IdP
      description: Clones a X.509 certificate for an IdP signing key credential from
        a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: keyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetIdpId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      tags:
      - IdentityProvider
      summary: Activate Identity Provider
      description: Activates an inactive IdP.
      operationId: activateIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      tags:
      - IdentityProvider
      summary: Deactivate Identity Provider
      description: Deactivates an active IdP.
      operationId: deactivateIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/users:
    get:
      tags:
      - IdentityProvider
      summary: Find Users
      description: Find all the users linked to an identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
  /api/v1/idps/{idpId}/users/{userId}:
    get:
      tags:
      - IdentityProvider
      summary: Get Identity Provider Application User
      description: Fetches a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
    post:
      tags:
      - IdentityProvider
      summary: Link a user to a Social IdP without a transaction
      description: Links an Okta user to an existing Social Identity Provider. This
        does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: userIdentityProviderLinkRequest
    delete:
      tags:
      - IdentityProvider
      summary: Unlink User from IdP
      description: Removes the link between the Okta user and the IdP user.
      operationId: unlinkUserFromIdentityProvider
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.idps.manage
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      tags:
      - IdentityProvider
      summary: Social Authentication Token Operation
      description: Fetches the tokens minted by the Social Authentication Provider
        when the user authenticates with Okta via Social Auth.
      operationId: listSocialAuthTokens
      parameters:
      - name: idpId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.idps.read
  /api/v1/inlineHooks:
    get:
      tags:
      - InlineHook
      summary: List Inline Hooks
      description: Success
      operationId: listInlineHooks
      parameters:
      - name: type
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InlineHook'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.read
    post:
      tags:
      - InlineHook
      summary: Create Inline Hook
      description: Success
      operationId: createInlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.manage
      x-codegen-request-body-name: inlineHook
  /api/v1/inlineHooks/{inlineHookId}:
    get:
      tags:
      - InlineHook
      summary: Get Inline Hook
      description: Gets an inline hook by ID
      operationId: getInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.read
    put:
      tags:
      - InlineHook
      summary: Update Inline Hook
      description: Updates an inline hook by ID
      operationId: updateInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.manage
      x-codegen-request-body-name: inlineHook
    delete:
      tags:
      - InlineHook
      summary: Delete Inline Hook
      description: "Deletes the Inline Hook matching the provided id. Once deleted,\
        \ the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks\
        \ with a status of INACTIVE are eligible for deletion."
      operationId: deleteInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.manage
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      tags:
      - InlineHook
      summary: Execute Inline Hook
      description: Executes the Inline Hook matching the provided inlineHookId using
        the request body as the input. This will send the provided data through the
        Channel and return a response if it matches the correct data contract. This
        execution endpoint should only be used for testing purposes.
      operationId: executeInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.inlineHooks.manage
      x-codegen-request-body-name: payloadData
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      tags:
      - InlineHook
      summary: Activate Inline Hook
      description: Activates the Inline Hook matching the provided id
      operationId: activateInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      tags:
      - InlineHook
      summary: Deactivate Inline Hook
      description: Deactivates the Inline Hook matching the provided id
      operationId: deactivateInlineHook
      parameters:
      - name: inlineHookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
  /api/v1/logs:
    get:
      tags:
      - SystemLog
      summary: Fetch a list of events from your Okta organization system log.
      description: The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
      - name: since
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: until
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 100
      - name: sortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ASCENDING
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEvent'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.logs.read
  /api/v1/mappings:
    get:
      tags:
      - ProfileMapping
      summary: List Profile Mappings
      description: Enumerates Profile Mappings in your organization with pagination.
      operationId: listProfileMappings
      parameters:
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      - name: sourceId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: targetId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileMapping'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.profileMappings.read
  /api/v1/mappings/{mappingId}:
    get:
      tags:
      - ProfileMapping
      summary: Get Profile Mapping
      description: Fetches a single Profile Mapping referenced by its ID.
      operationId: getProfileMapping
      parameters:
      - name: mappingId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
      security:
      - api_token: []
      - oauth2:
        - okta.profileMappings.read
    post:
      tags:
      - ProfileMapping
      summary: Update Profile Mapping
      description: "Updates an existing Profile Mapping by adding, updating, or removing\
        \ one or many Property Mappings."
      operationId: updateProfileMapping
      parameters:
      - name: mappingId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMapping'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
      security:
      - api_token: []
      - oauth2:
        - okta.profileMappings.manage
      x-codegen-request-body-name: profileMapping
  /api/v1/meta/schemas/apps/{appInstanceId}/default:
    get:
      tags:
      - Schema
      summary: Fetches the Schema for an App User
      description: Fetches the Schema for an App User
      operationId: getApplicationUserSchema
      parameters:
      - name: appInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.read
    post:
      tags:
      - Schema
      summary: Partial updates on the User Profile properties of the Application User
        Schema.
      description: Partial updates on the User Profile properties of the Application
        User Schema.
      operationId: updateApplicationUserProfile
      parameters:
      - name: appInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.manage
      x-codegen-request-body-name: body
  /api/v1/meta/schemas/group/default:
    get:
      tags:
      - Schema
      summary: Fetches the group schema
      description: Fetches the group schema
      operationId: getGroupSchema
      parameters: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.read
    post:
      tags:
      - Schema
      summary: "Updates, adds ore removes one or more custom Group Profile properties\
        \ in the schema"
      description: "Updates, adds ore removes one or more custom Group Profile properties\
        \ in the schema"
      operationId: updateGroupSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSchema'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.manage
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      tags:
      - LinkedObject
      summary: List Linked Object Definitions
      description: Success
      operationId: listLinkedObjectDefinitions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedObject'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.linkedObjects.read
    post:
      tags:
      - LinkedObject
      summary: Add Linked Object Definition
      description: Success
      operationId: addLinkedObjectDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
      security:
      - api_token: []
      - oauth2:
        - okta.linkedObjects.manage
      x-codegen-request-body-name: linkedObject
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    get:
      tags:
      - LinkedObject
      summary: Get Linked Object Definition
      description: Success
      operationId: getLinkedObjectDefinition
      parameters:
      - name: linkedObjectName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
      security:
      - api_token: []
      - oauth2:
        - okta.linkedObjects.read
    delete:
      tags:
      - LinkedObject
      summary: Delete Linked Object Definition
      description: Success
      operationId: deleteLinkedObjectDefinition
      parameters:
      - name: linkedObjectName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.linkedObjects.manage
  /api/v1/meta/schemas/user/{schemaId}:
    get:
      tags:
      - Schema
      summary: Fetches the schema for a Schema Id.
      description: Fetches the schema for a Schema Id.
      operationId: getUserSchema
      parameters:
      - name: schemaId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.read
    post:
      tags:
      - Schema
      summary: Update User Profile
      description: Partial updates on the User Profile properties of the user schema.
      operationId: updateUserProfile
      parameters:
      - name: schemaId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
      security:
      - api_token: []
      - oauth2:
        - okta.schemas.manage
      x-codegen-request-body-name: userSchema
  /api/v1/meta/types/user:
    get:
      tags:
      - UserType
      summary: List User Types
      description: Fetches all User Types in your org
      operationId: listUserTypes
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserType'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.read
    post:
      tags:
      - UserType
      summary: Create User Type
      description: "Creates a new User Type. A default User Type is automatically\
        \ created along with your org, and you may add another 9 User Types for a\
        \ maximum of 10."
      operationId: createUserType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.manage
      x-codegen-request-body-name: userType
  /api/v1/meta/types/user/{typeId}:
    get:
      tags:
      - UserType
      summary: Get User Type
      description: Fetches a User Type by ID. The special identifier `default` may
        be used to fetch the default User Type.
      operationId: getUserType
      parameters:
      - name: typeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.read
    put:
      tags:
      - UserType
      summary: Replace User Type
      description: Replace an existing User Type
      operationId: replaceUserType
      parameters:
      - name: typeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.manage
      x-codegen-request-body-name: userType
    post:
      tags:
      - UserType
      summary: Update User Type
      description: Updates an existing User Type
      operationId: updateUserType
      parameters:
      - name: typeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.manage
      x-codegen-request-body-name: userType
    delete:
      tags:
      - UserType
      summary: Delete User Type
      description: "Deletes a User Type permanently. This operation is not permitted\
        \ for the default type, nor for any User Type that has existing users"
      operationId: deleteUserType
      parameters:
      - name: typeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.userTypes.manage
  /api/v1/org:
    get:
      tags:
      - OrgSetting
      summary: Get org settings
      description: Get settings of your organization.
      operationId: getOrgSettings
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
    put:
      tags:
      - OrgSetting
      summary: Update Org setting
      description: Update settings of your organization.
      operationId: updateOrgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
      x-codegen-request-body-name: orgSetting
    post:
      tags:
      - OrgSetting
      summary: Partial update Org Setting
      description: Partial update settings of your organization.
      operationId: partialUpdateOrgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/contacts:
    get:
      tags:
      - OrgSetting
      summary: Get org contact types
      description: Gets Contact Types of your organization.
      operationId: getOrgContactTypes
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgContactTypeObj'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
  /api/v1/org/contacts/{contactType}:
    get:
      tags:
      - OrgSetting
      summary: Get org contact user
      description: Retrieves the URL of the User associated with the specified Contact
        Type.
      operationId: getOrgContactUser
      parameters:
      - name: contactType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
    put:
      tags:
      - OrgSetting
      summary: Update org contact user
      description: Updates the User associated with the specified Contact Type.
      operationId: updateOrgContactUser
      parameters:
      - name: contactType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgContactUser'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
      x-codegen-request-body-name: orgContactUser
  /api/v1/org/logo:
    post:
      tags:
      - OrgSetting
      summary: Update org logo
      description: Updates the logo for your organization.
      operationId: updateOrgLogo
      requestBody:
        description: logo file
        content:
          multipart/form-data:
            schema:
              type: object
              description: "The file must be in PNG, JPG, or GIF format and less than\
                \ 100kB in size. For best results use landscape orientation, a transparent\
                \ background, and a minimum size of 300px by 50px to prevent upscaling."
      responses:
        "201":
          description: Created
      security:
      - api_token: []
      - oauth2:
        - okta.apps.manage
  /api/v1/org/preferences:
    get:
      tags:
      - OrgSetting
      summary: Get org preferences
      description: Gets preferences of your organization.
      operationId: getOrgPreferences
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      tags:
      - OrgSetting
      summary: Show Okta UI Footer
      description: Hide the Okta UI footer for all end users of your organization.
      operationId: hideOktaUIFooter
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/preferences/showEndUserFooter:
    post:
      tags:
      - OrgSetting
      summary: Show Okta UI Footer
      description: Makes the Okta UI footer visible for all end users of your organization.
      operationId: showOktaUIFooter
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/privacy/oktaCommunication:
    get:
      tags:
      - OrgSetting
      summary: Get Okta Communication Settings
      description: Gets Okta Communication Settings of your organization.
      operationId: getOktaCommunicationSettings
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      tags:
      - OrgSetting
      summary: Opt in all users to Okta Communication emails
      description: Opts in all users of this org to Okta Communication emails.
      operationId: optInUsersToOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      tags:
      - OrgSetting
      summary: Opt out all users from Okta Communication emails
      description: Opts out all users of this org from Okta Communication emails.
      operationId: optOutUsersFromOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/privacy/oktaSupport:
    get:
      tags:
      - OrgSetting
      summary: Get Okta Support settings
      description: Gets Okta Support Settings of your organization.
      operationId: getOrgOktaSupportSettings
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.read
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      tags:
      - OrgSetting
      summary: Extend Okta Support
      description: Extends the length of time that Okta Support can access your org
        by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: extendOktaSupport
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      tags:
      - OrgSetting
      summary: Grant Okta Support
      description: Enables you to temporarily allow Okta Support to access your org
        as an administrator for eight hours.
      operationId: grantOktaSupport
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      tags:
      - OrgSetting
      summary: Extend Okta Support
      description: Revokes Okta Support access to your organization.
      operationId: revokeOktaSupport
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
      security:
      - api_token: []
      - oauth2:
        - okta.orgs.manage
  /api/v1/policies:
    get:
      tags:
      - Policy
      summary: List Policies
      description: Gets all policies with the specified type.
      operationId: listPolicies
      parameters:
      - name: type
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.policies.read
    post:
      tags:
      - Policy
      summary: Create Policy
      description: Creates a policy.
      operationId: createPolicy
      parameters:
      - name: activate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
      x-codegen-request-body-name: policy
  /api/v1/policies/{policyId}:
    get:
      tags:
      - Policy
      summary: Get Policy
      description: Gets a policy.
      operationId: getPolicy
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.read
    put:
      tags:
      - Policy
      summary: Update Policy
      description: Updates a policy.
      operationId: updatePolicy
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
      x-codegen-request-body-name: policy
    delete:
      tags:
      - Policy
      summary: Delete Policy
      description: Removes a policy.
      operationId: deletePolicy
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/policies/{policyId}/lifecycle/activate:
    post:
      tags:
      - Policy
      summary: Activate Policy
      description: Activates a policy.
      operationId: activatePolicy
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    post:
      tags:
      - Policy
      summary: Deactivate Policy
      description: Deactivates a policy.
      operationId: deactivatePolicy
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/policies/{policyId}/rules:
    get:
      tags:
      - Policy
      summary: List Policy Rules
      description: Enumerates all policy rules.
      operationId: listPolicyRules
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyRule'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.policies.read
    post:
      tags:
      - Policy
      summary: Create Policy Rule
      description: Creates a policy rule.
      operationId: createPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
      x-codegen-request-body-name: policyRule
  /api/v1/policies/{policyId}/rules/{ruleId}:
    get:
      tags:
      - Policy
      summary: Get Policy Rule
      description: Gets a policy rule.
      operationId: getPolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.read
    put:
      tags:
      - Policy
      summary: Update Policy Rule
      description: Updates a policy rule.
      operationId: updatePolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
      x-codegen-request-body-name: policyRule
    delete:
      tags:
      - Policy
      summary: Delete Policy Rule
      description: Removes a policy rule.
      operationId: deletePolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      tags:
      - Policy
      summary: Activate Policy Rule
      description: Activates a policy rule.
      operationId: activatePolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      tags:
      - Policy
      summary: Deactivate Policy Rule
      description: Deactivates a policy rule.
      operationId: deactivatePolicyRule
      parameters:
      - name: policyId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ruleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.policies.manage
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions:
    get:
      tags:
      - Subscription
      summary: List all subscriptions of a Custom Role
      description: When roleType List all subscriptions of a Role. Else when roleId
        List subscriptions of a Custom Role
      operationId: listRoleSubscriptions
      parameters:
      - name: roleTypeOrRoleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                x-content-type: application/json
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:
    get:
      tags:
      - Subscription
      summary: Get subscriptions of a Custom Role with a specific notification type
      description: When roleType Get subscriptions of a Role with a specific notification
        type. Else when roleId Get subscription of a Custom Role with a specific notification
        type.
      operationId: getRoleSubscriptionByNotificationType
      parameters:
      - name: roleTypeOrRoleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:
    post:
      tags:
      - Subscription
      summary: Subscribe a Custom Role to a specific notification type
      description: "When roleType Subscribes a Role to a specific notification type.\
        \ When you change the subscription status of a Role, it overrides the subscription\
        \ of any individual user of that Role. Else when roleId Subscribes a Custom\
        \ Role to a specific notification type. When you change the subscription status\
        \ of a Custom Role, it overrides the subscription of any individual user of\
        \ that Custom Role."
      operationId: subscribeRoleSubscriptionByNotificationType
      parameters:
      - name: roleTypeOrRoleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:
    post:
      tags:
      - Subscription
      summary: Unsubscribe a Custom Role from a specific notification type
      description: "When roleType Unsubscribes a Role from a specific notification\
        \ type. When you change the subscription status of a Role, it overrides the\
        \ subscription of any individual user of that Role. Else when roleId Unsubscribes\
        \ a Custom Role from a specific notification type. When you change the subscription\
        \ status of a Custom Role, it overrides the subscription of any individual\
        \ user of that Custom Role."
      operationId: unsubscribeRoleSubscriptionByNotificationType
      parameters:
      - name: roleTypeOrRoleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/sessions:
    post:
      tags:
      - Session
      summary: Create Session with Session Token
      description: "Creates a new session for a user with a valid session token. Use\
        \ this API if, for example, you want to set the session cookie yourself instead\
        \ of allowing Okta to set it, or want to hold the session ID in order to delete\
        \ a session via the API instead of visiting the logout URL."
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        "400":
          description: Bad Request
      security:
      - api_token: []
      x-codegen-request-body-name: createSessionRequest
  /api/v1/sessions/{sessionId}:
    get:
      tags:
      - Session
      summary: Get Session
      description: Get details about a session.
      operationId: getSession
      parameters:
      - name: sessionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.sessions.read
    delete:
      tags:
      - Session
      summary: End Session
      description: End a session.
      operationId: endSession
      parameters:
      - name: sessionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.sessions.manage
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      tags:
      - Session
      summary: Refresh Session
      description: Refresh a session.
      operationId: refreshSession
      parameters:
      - name: sessionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.sessions.manage
  /api/v1/templates/sms:
    get:
      tags:
      - Template
      summary: List SMS Templates
      description: Enumerates custom SMS templates in your organization. A subset
        of templates can be returned that match a template type.
      operationId: listSmsTemplates
      parameters:
      - name: templateType
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/SmsTemplateType'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmsTemplate'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.templates.read
    post:
      tags:
      - Template
      summary: Add SMS Template
      description: Adds a new custom SMS template to your organization.
      operationId: createSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
      security:
      - api_token: []
      - oauth2:
        - okta.templates.manage
      x-codegen-request-body-name: smsTemplate
  /api/v1/templates/sms/{templateId}:
    get:
      tags:
      - Template
      summary: Get SMS Template
      description: Fetches a specific template by `id`
      operationId: getSmsTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
      security:
      - api_token: []
      - oauth2:
        - okta.templates.read
    put:
      tags:
      - Template
      summary: Update SMS Template
      description: Updates the SMS template.
      operationId: updateSmsTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
      security:
      - api_token: []
      - oauth2:
        - okta.templates.manage
      x-codegen-request-body-name: smsTemplate
    post:
      tags:
      - Template
      summary: Partial SMS Template Update
      description: 'Updates only some of the SMS template properties:'
      operationId: partialUpdateSmsTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
      security:
      - api_token: []
      - oauth2:
        - okta.templates.manage
      x-codegen-request-body-name: smsTemplate
    delete:
      tags:
      - Template
      summary: Remove SMS Template
      description: Removes an SMS template.
      operationId: deleteSmsTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.templates.manage
  /api/v1/threats/configuration:
    get:
      tags:
      - ThreatInsight
      summary: Get Current Configuration
      description: Gets current ThreatInsight configuration
      operationId: getCurrentConfiguration
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
      security:
      - api_token: []
    post:
      tags:
      - ThreatInsight
      summary: Update Configuration
      description: Updates ThreatInsight configuration
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
      security:
      - api_token: []
      x-codegen-request-body-name: threatInsightConfiguration
  /api/v1/trustedOrigins:
    get:
      tags:
      - TrustedOrigin
      summary: List Trusted Origins
      description: Success
      operationId: listOrigins
      parameters:
      - name: q
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustedOrigin'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.read
    post:
      tags:
      - TrustedOrigin
      summary: Create Trusted Origin
      description: Success
      operationId: createOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.manage
      x-codegen-request-body-name: trustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}:
    get:
      tags:
      - TrustedOrigin
      summary: Get Trusted Origin
      description: Success
      operationId: getOrigin
      parameters:
      - name: trustedOriginId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.read
    put:
      tags:
      - TrustedOrigin
      summary: Update Trusted Origin
      description: Success
      operationId: updateOrigin
      parameters:
      - name: trustedOriginId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.manage
      x-codegen-request-body-name: trustedOrigin
    delete:
      tags:
      - TrustedOrigin
      summary: Delete Trusted Origin
      description: Success
      operationId: deleteOrigin
      parameters:
      - name: trustedOriginId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.manage
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    post:
      tags:
      - TrustedOrigin
      summary: Activate Trusted Origin
      description: Success
      operationId: activateOrigin
      parameters:
      - name: trustedOriginId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.manage
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    post:
      tags:
      - TrustedOrigin
      summary: Deactivate Trusted Origin
      description: Success
      operationId: deactivateOrigin
      parameters:
      - name: trustedOriginId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
      security:
      - api_token: []
      - oauth2:
        - okta.trustedOrigins.manage
  /api/v1/users:
    get:
      tags:
      - User
      summary: List Users
      description: Lists users in your organization with pagination in most cases.  A
        subset of users can be returned that match a supported filter expression or
        search criteria.
      operationId: listUsers
      parameters:
      - name: q
        in: query
        description: "Finds a user that matches firstName, lastName, and email properties"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of users
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of results returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: filter
        in: query
        description: Filters users with a supported expression for a subset of properties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: Searches for users with a supported filtering  expression for
          most properties
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortBy
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortOrder
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read.self
    post:
      tags:
      - User
      summary: Create User
      description: Creates a new user in your Okta organization with or without credentials.
      operationId: createUser
      parameters:
      - name: activate
        in: query
        description: Executes activation lifecycle operation when creating the user
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: provider
        in: query
        description: Indicates whether to create a user with a specified authentication
          provider
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: nextLogin
        in: query
        description: "With activate=true, set nextLogin to \"changePassword\" to have\
          \ the password be EXPIRED, so user must change it the next time they log\
          \ in."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/UserNextLogin'
        x-okta-added-version: 0.14.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: body
  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      tags:
      - User
      summary: Set Linked Object for User
      description: Sets a linked object for a user.
      operationId: setLinkedObjectForUser
      parameters:
      - name: associatedUserId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: primaryRelationshipName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: primaryUserId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content: {}
      security:
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}:
    get:
      tags:
      - User
      summary: Get User
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    put:
      tags:
      - User
      summary: Update User
      description: Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strict
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: user
    post:
      tags:
      - User
      summary: Partial Update User
      description: "Fetch a user by `id`, `login`, or `login shortname` if the short\
        \ name is unambiguous."
      operationId: partialUpdateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strict
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: user
    delete:
      tags:
      - User
      summary: Delete User
      description: Deletes a user permanently.  This operation can only be performed
        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        x-okta-added-version: 1.5.0
      responses:
        "202":
          description: ACCEPTED
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/appLinks:
    get:
      tags:
      - User
      summary: Get Assigned App Links
      description: Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: listAppLinks
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppLink'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/clients:
    get:
      tags:
      - User
      summary: List User Clients
      description: Lists all client resources for which the specified user has grants
        or tokens.
      operationId: listUserClients
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/clients/{clientId}/grants:
    get:
      tags:
      - User
      summary: List Grants for User and Client
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Revoke Grants for User and Client
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    get:
      tags:
      - User
      summary: List Refresh Tokens for User and Client
      description: Lists all refresh tokens issued for the specified User and Client.
      operationId: listRefreshTokensForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Revoke Tokens for User and Client
      description: Revokes all refresh tokens issued for the specified User and Client.
      operationId: revokeTokensForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    get:
      tags:
      - User
      summary: Get Refresh Token for User and Client
      description: Gets a refresh token issued for the specified User and Client.
      operationId: getRefreshTokenForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 20
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Revoke Token for User and Client
      description: Revokes the specified refresh token.
      operationId: revokeTokenForUserAndClient
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tokenId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/credentials/change_password:
    post:
      tags:
      - User
      summary: Change Password
      description: "Changes a user's password by validating the user's current password.\
        \ This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,\
        \ or `RECOVERY` status that have a valid password credential"
      operationId: changePassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: strict
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: changePasswordRequest
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      tags:
      - User
      summary: Change Recovery Question
      description: "Changes a user's recovery question & answer credential by validating\
        \ the user's current password.  This operation can only be performed on users\
        \ in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password\
        \ credential"
      operationId: changeRecoveryQuestion
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      tags:
      - User
      summary: Initiate Forgot Password
      description: Initiate forgot password flow. Generates a one-time token (OTT)
        that can be used to reset a user's password.
      operationId: forgotPassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Reset url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    post:
      tags:
      - User
      summary: Reset Password with Recovery Question
      description: Resets the user's password to the specified password if the provided
        answer to the recovery question is correct.
      operationId: forgotPasswordSetNewPassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          description: Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/factors:
    get:
      tags:
      - UserFactor
      summary: List Factors
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    post:
      tags:
      - UserFactor
      summary: Enroll Factor
      description: Enrolls a user with a supported factor.
      operationId: enrollFactor
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: updatePhone
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: templateId
        in: query
        description: id of SMS template (only for SMS factor)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tokenLifetimeSeconds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 300
        x-okta-added-version: 1.3.0
      - name: activate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        x-okta-added-version: 1.3.0
      requestBody:
        description: Factor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/catalog:
    get:
      tags:
      - UserFactor
      summary: List Supported Factors
      description: Enumerates all the supported factors that can be enrolled for the
        specified user
      operationId: listSupportedFactors
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/factors/questions:
    get:
      tags:
      - UserFactor
      summary: List Supported Security Questions
      description: Enumerates all available security questions for a user's `question`
        factor
      operationId: listSupportedSecurityQuestions
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityQuestion'
                x-content-type: application/json
      security:
      - api_token: []
  /api/v1/users/{userId}/factors/{factorId}:
    get:
      tags:
      - UserFactor
      summary: Get Factor
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: factorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - UserFactor
      summary: Delete Factor
      description: "Unenrolls an existing factor for the specified user, allowing\
        \ the user to enroll a new factor."
      operationId: deleteFactor
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: factorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      tags:
      - UserFactor
      summary: Activate Factor
      description: The `sms` and `token:software:totp` factor types require activation
        to complete the enrollment process.
      operationId: activateFactor
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: factorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateFactorRequest'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      tags:
      - UserFactor
      summary: Get Factor Transaction Status
      description: Polls factors verification transaction for status.
      operationId: getFactorTransactionStatus
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: factorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: transactionId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
      security:
      - api_token: []
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      tags:
      - UserFactor
      summary: Verify MFA Factor
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: verifyFactor
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: factorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tokenLifetimeSeconds
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 300
        x-okta-added-version: 1.3.0
      - name: X-Forwarded-For
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        x-okta-added-version: 1.11.0
      - name: User-Agent
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        x-okta-added-version: 1.11.0
      - name: Accept-Language
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/grants:
    get:
      tags:
      - User
      summary: List User Grants
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: scopeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Revoke User Grants
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/grants/{grantId}:
    get:
      tags:
      - User
      summary: Get User Grant
      description: Gets a grant for the specified user
      operationId: getUserGrant
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: grantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Revoke User Grant
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: grantId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/groups:
    get:
      tags:
      - User
      summary: Get Member Groups
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/idps:
    get:
      tags:
      - User
      summary: Listing IdPs associated with a user
      description: Lists the IdPs associated with the user.
      operationId: listUserIdentityProviders
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      tags:
      - User
      summary: Activate User
      description: Activates a user.  This operation can only be performed on users
        with a `STAGED` status.  Activation of a user is an asynchronous operation.
        The user will have the `transitioningToStatus` property with a value of `ACTIVE`
        during activation to indicate that the user hasn't completed the asynchronous
        operation.  The user will have a status of `ACTIVE` when the activation process
        is complete.
      operationId: activateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        description: Sends an activation email to the user if true
        required: true
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      tags:
      - User
      summary: Deactivate User
      description: "Deactivates a user. This operation can only be performed on users\
        \ that do not have a `DEPROVISIONED` status. While the asynchronous operation\
        \ (triggered by HTTP header `Prefer: respond-async`) is proceeding the user's\
        \ `transitioningToStatus` property is `DEPROVISIONED`. The user's status is\
        \ `DEPROVISIONED` when the deactivation process is complete."
      operationId: deactivateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        x-okta-added-version: 1.5.0
      responses:
        "200":
          description: OK
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/expire_password:
    post:
      tags:
      - User
      summary: Expire Password
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next login.
      operationId: expirePassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:
    post:
      tags:
      - User
      summary: Expire Password and Set Temporary Password
      description: "This operation transitions the user to the status of `PASSWORD_EXPIRED`\
        \ so that the user is required to change their password at their next login,\
        \ and also sets the user's password to a temporary password returned in the\
        \ response."
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/reactivate:
    post:
      tags:
      - User
      summary: Reactivate User
      description: "Reactivates a user.  This operation can only be performed on users\
        \ with a `PROVISIONED` status.  This operation restarts the activation workflow\
        \ if for some reason the user activation was not completed when using the\
        \ activationToken from [Activate User](#activate-user)."
      operationId: reactivateUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        description: Sends an activation email to the user if true
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      tags:
      - User
      summary: Reset Factors
      description: This operation resets all factors for the specified user. All MFA
        factor enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in one
        or more MFA factors.
      operationId: resetFactors
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      tags:
      - User
      summary: Reset Password
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or returned
        to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sendEmail
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      tags:
      - User
      summary: Suspend User
      description: Suspends a user.  This operation can only be performed on users
        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when
        the process is complete.
      operationId: suspendUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      tags:
      - User
      summary: Unlock User
      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      tags:
      - User
      summary: Unsuspend User
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/linkedObjects/{relationshipName}:
    get:
      tags:
      - User
      summary: Get Linked Objects for User
      description: "Get linked objects for a user, relationshipName can be a primary\
        \ or associated relationship name"
      operationId: getLinkedObjectsForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: relationshipName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseLinks'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
    delete:
      tags:
      - User
      summary: Remove Linked Object for User
      description: "Delete linked objects for a user, relationshipName can be ONLY\
        \ a primary relationship name"
      operationId: removeLinkedObjectForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: relationshipName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/roles:
    get:
      tags:
      - User
      summary: List Assigned Roles for User
      description: Lists all roles assigned to a user.
      operationId: listAssignedRolesForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
    post:
      tags:
      - User
      summary: Assign Role to User
      description: Assigns a role to a user.
      operationId: assignRoleToUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: disableNotifications
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
      x-codegen-request-body-name: assignRoleRequest
  /api/v1/users/{userId}/roles/{roleId}:
    get:
      tags:
      - User
      summary: Get User Role
      description: Gets role that is assigned to user.
      operationId: getUserRole
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
    delete:
      tags:
      - User
      summary: Remove Role from User
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    get:
      tags:
      - User
      summary: List Application Targets for Application Administrator Role for User
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a User.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
    put:
      tags:
      - User
      summary: Add All Apps as Target to Role
      description: Success
      operationId: addAllAppsAsTargetToRole
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    put:
      tags:
      - User
      summary: Add Application Target to Admin Role for User
      description: Success
      operationId: addApplicationTargetToAdminRoleForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - User
      summary: Remove Application Target from Application Administrator Role for User
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    put:
      tags:
      - User
      summary: Add App Instance Target to App Administrator Role given to a User
      description: Add App Instance Target to App Administrator Role given to a User
      operationId: addApplicationTargetToAppAdminRoleForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: applicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - User
      summary: Remove App Instance Target to App Administrator Role given to a User
      description: Remove App Instance Target to App Administrator Role given to a
        User
      operationId: removeApplicationTargetFromAdministratorRoleForUser
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: appName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: applicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      tags:
      - User
      summary: List Group Targets for Role
      description: Success
      operationId: listGroupTargetsForRole
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: after
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
                x-content-type: application/json
      security:
      - api_token: []
      - oauth2:
        - okta.roles.read
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    put:
      tags:
      - User
      summary: Add Group Target to Role
      description: Success
      operationId: addGroupTargetToRole
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
    delete:
      tags:
      - User
      summary: Remove Group Target from Role
      description: Success
      operationId: removeGroupTargetFromRole
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: roleId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.roles.manage
  /api/v1/users/{userId}/sessions:
    delete:
      tags:
      - User
      summary: Clear User Sessions
      description: Removes all active identity provider sessions. This forces the
        user to authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: clearUserSessions
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthTokens
        in: query
        description: Revoke issued OpenID Connect and OAuth refresh and access tokens
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "204":
          description: No Content
          content: {}
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/subscriptions:
    get:
      tags:
      - Subscription
      summary: List subscriptions of a User
      description: List subscriptions of a User. Only lists subscriptions for current
        user. An AccessDeniedException message is sent if requests are made from other
        users.
      operationId: listUserSubscriptions
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                x-content-type: application/json
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      tags:
      - Subscription
      summary: Get the subscription of a User with a specific notification type
      description: Get the subscriptions of a User with a specific notification type.
        Only gets subscriptions for current user. An AccessDeniedException message
        is sent if requests are made from other users.
      operationId: getUserSubscriptionByNotificationType
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.users.read
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      tags:
      - Subscription
      summary: Subscribe to a specific notification type
      description: Subscribes a User to a specific notification type. Only the current
        User can subscribe to a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: subscribeUserSubscriptionByNotificationType
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      tags:
      - Subscription
      summary: Unsubscribe from a specific notification type
      description: Unsubscribes a User from a specific notification type. Only the
        current User can unsubscribe from a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: unsubscribeUserSubscriptionByNotificationType
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
      security:
      - api_token: []
      - oauth2:
        - okta.users.manage
  /api/v1/zones:
    get:
      tags:
      - NetworkZone
      summary: List Network Zones
      description: Enumerates network zones added to your organization with pagination.
        A subset of zones can be returned that match a supported filter expression
        or query.
      operationId: listNetworkZones
      parameters:
      - name: after
        in: query
        description: Specifies the pagination cursor for the next page of network
          zones
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Specifies the number of results for a page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: -1
      - name: filter
        in: query
        description: Filters zones by usage or id expression
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkZone'
                x-content-type: application/json
      security:
      - api_token: []
    post:
      tags:
      - NetworkZone
      summary: Add Network Zone
      description: Adds a new network zone to your Okta organization.
      operationId: createNetworkZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
      security:
      - api_token: []
      x-codegen-request-body-name: zone
  /api/v1/zones/{zoneId}:
    get:
      tags:
      - NetworkZone
      summary: Get Network Zone
      description: Fetches a network zone from your Okta organization by `id`.
      operationId: getNetworkZone
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
      security:
      - api_token: []
    put:
      tags:
      - NetworkZone
      summary: Update Network Zone
      description: Updates a network zone in your organization.
      operationId: updateNetworkZone
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
      security:
      - api_token: []
      x-codegen-request-body-name: zone
    delete:
      tags:
      - NetworkZone
      summary: Delete Network Zone
      description: Removes network zone.
      operationId: deleteNetworkZone
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content: {}
      security:
      - api_token: []
  /api/v1/zones/{zoneId}/lifecycle/activate:
    post:
      tags:
      - NetworkZone
      summary: Activate Network Zone
      description: Activate Network Zone
      operationId: activateNetworkZone
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
      security:
      - api_token: []
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    post:
      tags:
      - NetworkZone
      summary: Deactivate Network Zone
      description: Deactivates a network zone.
      operationId: deactivateNetworkZone
      parameters:
      - name: zoneId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
      security:
      - api_token: []
components:
  schemas:
    AccessPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
    AccessPolicyConstraint:
      type: object
      properties:
        methods:
          type: array
          items:
            type: string
        reauthenticateIn:
          type: string
        types:
          type: array
          items:
            type: string
    AccessPolicyConstraints:
      type: object
      properties:
        knowledge:
          $ref: '#/components/schemas/KnowledgeConstraint'
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
    AccessPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - type: object
        properties:
          actions:
            $ref: '#/components/schemas/AccessPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/AccessPolicyRuleConditions'
          name:
            type: string
    AccessPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - type: object
        properties:
          appSignOn:
            $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
    AccessPolicyRuleApplicationSignOn:
      type: object
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
    AccessPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - type: object
        properties:
          device:
            $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
          elCondition:
            $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
          userType:
            $ref: '#/components/schemas/UserTypeCondition'
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
    AcsEndpoint:
      type: object
      properties:
        url:
          type: string
        index:
          type: integer
    ActivateFactorRequest:
      type: object
      properties:
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
    AllowedForEnum:
      type: string
      enum:
      - recovery
      - sso
      - any
      - none
    AppAndInstanceConditionEvaluatorAppOrInstance:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/AppAndInstanceType'
      example:
        name: name
        id: id
        type: APP_TYPE
    AppAndInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
        include:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
      example:
        include:
        - null
        - null
        exclude:
        - name: name
          id: id
          type: APP_TYPE
        - name: name
          id: id
          type: APP_TYPE
    AppAndInstanceType:
      type: string
      enum:
      - APP_TYPE
      - APP
    AppInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    AppLink:
      type: object
      properties:
        appAssignmentId:
          type: string
          readOnly: true
        appInstanceId:
          type: string
          readOnly: true
        appName:
          type: string
          readOnly: true
        credentialsSetup:
          type: boolean
          readOnly: true
        hidden:
          type: boolean
          readOnly: true
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        linkUrl:
          type: string
          readOnly: true
        logoUrl:
          type: string
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
      example:
        appInstanceId: appInstanceId
        credentialsSetup: true
        hidden: true
        appName: appName
        appAssignmentId: appAssignmentId
        sortOrder: 0
        linkUrl: linkUrl
        id: id
        label: label
        logoUrl: logoUrl
    AppUser:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: false
        lastSync:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
        scope:
          type: string
        status:
          type: string
          readOnly: true
        statusChanged:
          type: string
          format: date-time
          readOnly: true
        syncState:
          type: string
          readOnly: true
      example:
        _links:
          key: {}
        credentials:
          password:
            value: ""
          userName: userName
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: {}
        syncState: syncState
        externalId: externalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        lastSync: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        scope: scope
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        status: status
    AppUserCredentials:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
      example:
        password:
          value: ""
        userName: userName
    AppUserPasswordCredential:
      type: object
      properties:
        value:
          type: string
          format: password
      example:
        value: ""
    Application:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          type: array
          items:
            type: string
        id:
          type: string
          readOnly: true
        label:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          type: string
          readOnly: true
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          $ref: '#/components/schemas/ApplicationLifecycleStatus'
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      example:
        settings:
          app: {}
          notes:
            enduser: enduser
            admin: admin
          inlineHookId: inlineHookId
          implicitAssignment: true
          notifications:
            vpn:
              helpUrl: helpUrl
              message: message
              network:
                include:
                - include
                - include
                connection: connection
                exclude:
                - exclude
                - exclude
        visibility:
          hide:
            web: true
            iOS: true
          appLinks:
            key: true
          autoLaunch: true
          autoSubmitToolbar: true
        _links:
          key: {}
        accessibility:
          errorRedirectUrl: errorRedirectUrl
          selfService: true
          loginRedirectUrl: loginRedirectUrl
        credentials:
          userNameTemplate:
            template: template
            pushStatus: pushStatus
            suffix: suffix
            type: type
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: sig
            kid: kid
            rotationMode: rotationMode
            lastRotated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: {}
        signOnMode: BOOKMARK
        label: label
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        name: name
        id: id
        licensing:
          seatCount: 0
        status: ACTIVE
      discriminator:
        propertyName: signOnMode
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/SamlApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
    ApplicationAccessibility:
      type: object
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
      example:
        errorRedirectUrl: errorRedirectUrl
        selfService: true
        loginRedirectUrl: loginRedirectUrl
    ApplicationCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      example:
        userNameTemplate:
          template: template
          pushStatus: pushStatus
          suffix: suffix
          type: type
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: sig
          kid: kid
          rotationMode: rotationMode
          lastRotated: 2000-01-23T04:56:07.000+00:00
    ApplicationCredentialsOAuthClient:
      type: object
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
    ApplicationCredentialsScheme:
      type: string
      enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
    ApplicationCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          type: string
        use:
          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: sig
        kid: kid
        rotationMode: rotationMode
        lastRotated: 2000-01-23T04:56:07.000+00:00
    ApplicationCredentialsSigningUse:
      type: string
      enum:
      - sig
    ApplicationCredentialsUsernameTemplate:
      type: object
      properties:
        pushStatus:
          type: string
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
      example:
        template: template
        pushStatus: pushStatus
        suffix: suffix
        type: type
    ApplicationFeature:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        capabilities:
          $ref: '#/components/schemas/CapabilitiesObject'
        description:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/EnabledStatus'
      example:
        capabilities:
          create:
            lifecycleCreate:
              status: ENABLED
          update:
            password:
              seed: OKTA
              change: KEEP_EXISTING
              status: null
            profile:
              status: null
            lifecycleDeactivate:
              status: null
        _links:
          key: {}
        name: name
        description: description
        status: null
    ApplicationGroupAssignment:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        priority:
          type: integer
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        _links:
          key: {}
        profile:
          key: {}
        id: id
        priority: 0
    ApplicationLicensing:
      type: object
      properties:
        seatCount:
          type: integer
      example:
        seatCount: 0
    ApplicationLifecycleStatus:
      type: string
      readOnly: true
      enum:
      - ACTIVE
      - INACTIVE
      - DELETED
    ApplicationSettings:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/ApplicationSettingsApplication'
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
      example:
        app: {}
        notes:
          enduser: enduser
          admin: admin
        inlineHookId: inlineHookId
        implicitAssignment: true
        notifications:
          vpn:
            helpUrl: helpUrl
            message: message
            network:
              include:
              - include
              - include
              connection: connection
              exclude:
              - exclude
              - exclude
    ApplicationSettingsApplication:
      type: object
    ApplicationSettingsNotes:
      type: object
      properties:
        admin:
          type: string
        enduser:
          type: string
      example:
        enduser: enduser
        admin: admin
    ApplicationSettingsNotifications:
      type: object
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      example:
        vpn:
          helpUrl: helpUrl
          message: message
          network:
            include:
            - include
            - include
            connection: connection
            exclude:
            - exclude
            - exclude
    ApplicationSettingsNotificationsVpn:
      type: object
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      example:
        helpUrl: helpUrl
        message: message
        network:
          include:
          - include
          - include
          connection: connection
          exclude:
          - exclude
          - exclude
    ApplicationSettingsNotificationsVpnNetwork:
      type: object
      properties:
        connection:
          type: string
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        connection: connection
        exclude:
        - exclude
        - exclude
    ApplicationSignOnMode:
      type: string
      enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      - SAML_1_1
    ApplicationVisibility:
      type: object
      properties:
        appLinks:
          type: object
          additionalProperties:
            type: boolean
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      example:
        hide:
          web: true
          iOS: true
        appLinks:
          key: true
        autoLaunch: true
        autoSubmitToolbar: true
    ApplicationVisibilityHide:
      type: object
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      example:
        web: true
        iOS: true
    AssignRoleRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RoleType'
    AuthenticationProvider:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      example:
        name: name
        type: ACTIVE_DIRECTORY
    AuthenticationProviderType:
      type: string
      enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
    Authenticator:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        key:
          type: string
        status:
          $ref: '#/components/schemas/AuthenticatorStatus'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        settings:
          appInstanceId: appInstanceId
          allowedFor: recovery
          userVerification: REQUIRED
          channelBinding:
            style: style
            required: ALWAYS
          compliance:
            fips: REQUIRED
          tokenLifetimeInMinutes: 6
        _links:
          key: {}
        provider:
          configuration:
            hostName: hostName
            instanceId: instanceId
            authPort: 0
            userNameTemplate:
              template: template
            sharedSecret: sharedSecret
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: app
        key: key
        status: ACTIVE
    AuthenticatorProvider:
      properties:
        configuration:
          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
        type:
          type: string
      example:
        configuration:
          hostName: hostName
          instanceId: instanceId
          authPort: 0
          userNameTemplate:
            template: template
          sharedSecret: sharedSecret
        type: type
    AuthenticatorProviderConfiguration:
      properties:
        authPort:
          type: integer
        hostName:
          type: string
        instanceId:
          type: string
        sharedSecret:
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNameTemplate'
      example:
        hostName: hostName
        instanceId: instanceId
        authPort: 0
        userNameTemplate:
          template: template
        sharedSecret: sharedSecret
    AuthenticatorProviderConfigurationUserNameTemplate:
      properties:
        template:
          type: string
      example:
        template: template
    AuthenticatorSettings:
      type: object
      properties:
        allowedFor:
          $ref: '#/components/schemas/AllowedForEnum'
        appInstanceId:
          type: string
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        tokenLifetimeInMinutes:
          type: integer
        userVerification:
          $ref: '#/components/schemas/UserVerificationEnum'
      example:
        appInstanceId: appInstanceId
        allowedFor: recovery
        userVerification: REQUIRED
        channelBinding:
          style: style
          required: ALWAYS
        compliance:
          fips: REQUIRED
        tokenLifetimeInMinutes: 6
    AuthenticatorStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    AuthenticatorType:
      type: string
      enum:
      - app
      - password
      - security_question
      - phone
      - email
      - security_key
      - federated
    AuthorizationServer:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        audiences:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        description:
          type: string
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: {}
        credentials:
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: sig
            kid: kid
            rotationMode: AUTO
            lastRotated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        audiences:
        - audiences
        - audiences
        description: description
        id: id
        issuer: issuer
        issuerMode: ORG_URL
        status: ACTIVE
    AuthorizationServerCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
      example:
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: sig
          kid: kid
          rotationMode: AUTO
          lastRotated: 2000-01-23T04:56:07.000+00:00
    AuthorizationServerCredentialsRotationMode:
      type: string
      enum:
      - AUTO
      - MANUAL
    AuthorizationServerCredentialsSigningConfig:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'
        use:
          $ref: '#/components/schemas/AuthorizationServerCredentialsUse'
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: sig
        kid: kid
        rotationMode: AUTO
        lastRotated: 2000-01-23T04:56:07.000+00:00
    AuthorizationServerCredentialsUse:
      type: string
      enum:
      - sig
    AuthorizationServerPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
    AuthorizationServerPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - type: object
        properties:
          conditions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
          actions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
    AuthorizationServerPolicyRuleActions:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
    AuthorizationServerPolicyRuleConditions:
      type: object
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
    AutoLoginApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          settings:
            $ref: '#/components/schemas/AutoLoginApplicationSettings'
    AutoLoginApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          signOn:
            $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
    AutoLoginApplicationSettingsSignOn:
      type: object
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
    BasicApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/BasicApplicationSettingsApplication'
    BasicApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          authURL:
            type: string
          url:
            type: string
    BasicAuthApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            type: string
            default: template_basic_auth
          settings:
            $ref: '#/components/schemas/BasicApplicationSettings'
      x-okta-defined-as:
        name: template_basic_auth
    BeforeScheduledActionPolicyRuleCondition:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
      example:
        duration:
          number: 0
          unit: unit
        lifecycleAction:
          status: ACTIVE
    BookmarkApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          name:
            type: string
            default: bookmark
          settings:
            $ref: '#/components/schemas/BookmarkApplicationSettings'
      x-okta-defined-as:
        name: bookmark
    BookmarkApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
    BookmarkApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          requestIntegration:
            type: boolean
          url:
            type: string
    Brand:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        id:
          type: string
          readOnly: true
        removePoweredByOkta:
          type: boolean
      example:
        agreeToCustomPrivacyPolicy: true
        removePoweredByOkta: true
        _links:
          key: {}
        id: id
        customPrivacyPolicyUrl: customPrivacyPolicyUrl
    BrowserPluginApplication:
      discriminator:
        propertyName: Name
        mapping:
          template_swa: '#/components/schemas/SwaApplication'
          template_swa3field: '#/components/schemas/SwaThreeFieldApplication'
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
    CAPTCHAInstance:
      title: CAPTCHAInstance
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        secretKey:
          type: string
          writeOnly: true
        siteKey:
          type: string
        type:
          $ref: '#/components/schemas/CAPTCHAType'
        _link:
          $ref: '#/components/schemas/CAPTCHAInstance__link'
      description: ""
      example:
        siteKey: siteKey
        secretKey: secretKey
        _link:
          self:
            hints:
              allow:
              - GET
              - GET
            href: href
        name: name
        id: id
        type: HCAPTCHA
    CAPTCHAType:
      type: string
      enum:
      - HCAPTCHA
      - RECAPTCHA_V2
    CallUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/CallUserFactorProfile'
    CallUserFactorProfile:
      type: object
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
    CapabilitiesCreateObject:
      type: object
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
      example:
        lifecycleCreate:
          status: ENABLED
    CapabilitiesObject:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
      example:
        create:
          lifecycleCreate:
            status: ENABLED
        update:
          password:
            seed: OKTA
            change: KEEP_EXISTING
            status: null
          profile:
            status: null
          lifecycleDeactivate:
            status: null
    CapabilitiesUpdateObject:
      type: object
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
      example:
        password:
          seed: OKTA
          change: KEEP_EXISTING
          status: null
        profile:
          status: null
        lifecycleDeactivate:
          status: null
    CatalogApplication:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        category:
          type: string
        verificationStatus:
          type: string
        website:
          type: string
        signOnModes:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        features:
        - features
        - features
        website: website
        verificationStatus: verificationStatus
        _links:
          key: {}
        displayName: displayName
        name: name
        description: description
        id: id
        category: category
        signOnModes:
        - signOnModes
        - signOnModes
        status: ACTIVE
    CatalogApplicationStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    ChangeEnum:
      type: string
      enum:
      - KEEP_EXISTING
      - CHANGE
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
    ChannelBinding:
      type: object
      properties:
        required:
          $ref: '#/components/schemas/RequiredEnum'
        style:
          type: string
      example:
        style: style
        required: ALWAYS
    ClientPolicyCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
    Compliance:
      type: object
      properties:
        fips:
          $ref: '#/components/schemas/FipsEnum'
      example:
        fips: REQUIRED
    ContextPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - type: object
        properties:
          expression:
            type: string
    CreateSessionRequest:
      type: object
      properties:
        sessionToken:
          type: string
    CreateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          type: array
          items:
            type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        type:
          $ref: '#/components/schemas/UserType'
    Csr:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        csr:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        kty:
          type: string
          readOnly: true
      example:
        kty: kty
        csr: csr
        created: 2000-01-23T04:56:07.000+00:00
        id: id
    CsrMetadata:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
    CsrMetadataSubject:
      type: object
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationName:
          type: string
        organizationalUnitName:
          type: string
        stateOrProvinceName:
          type: string
    CsrMetadataSubjectAltNames:
      type: object
      properties:
        dnsNames:
          type: array
          items:
            type: string
    CustomHotpUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          factorProfileId:
            type: string
          profile:
            $ref: '#/components/schemas/CustomHotpUserFactorProfile'
    CustomHotpUserFactorProfile:
      type: object
      properties:
        sharedSecret:
          type: string
    DNSRecord:
      type: object
      properties:
        expiration:
          type: string
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          type: array
          items:
            type: string
      example:
        fqdn: fqdn
        recordType: TXT
        values:
        - values
        - values
        expiration: expiration
    DNSRecordType:
      type: string
      enum:
      - TXT
      - CNAME
    DeviceAccessPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - type: object
        properties:
          managed:
            type: boolean
          registered:
            type: boolean
    DevicePolicyMDMFramework:
      type: string
      enum:
      - AFW
      - SAFE
      - NATIVE
    DevicePolicyPlatformType:
      type: string
      enum:
      - IOS
      - ANDROID
      - OSX
      - WINDOWS
    DevicePolicyRuleCondition:
      type: object
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          $ref: '#/components/schemas/DevicePolicyTrustLevel'
      example:
        rooted: true
        trustLevel: ANY
        migrated: true
        platform:
          types:
          - IOS
          - IOS
          supportedMDMFrameworks:
          - AFW
          - AFW
    DevicePolicyRuleConditionPlatform:
      type: object
      properties:
        supportedMDMFrameworks:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyMDMFramework'
        types:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyPlatformType'
      example:
        types:
        - IOS
        - IOS
        supportedMDMFrameworks:
        - AFW
        - AFW
    DevicePolicyTrustLevel:
      type: string
      enum:
      - ANY
      - TRUSTED
    Domain:
      type: object
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
    DomainCertificate:
      type: object
      properties:
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          $ref: '#/components/schemas/DomainCertificateType'
    DomainCertificateMetadata:
      type: object
      properties:
        expiration:
          type: string
        fingerprint:
          type: string
        subject:
          type: string
      example:
        subject: subject
        fingerprint: fingerprint
        expiration: expiration
    DomainCertificateSourceType:
      type: string
      enum:
      - MANUAL
      - OKTA_MANAGED
    DomainCertificateType:
      type: string
      enum:
      - PEM
    DomainLinks:
      type: object
      properties:
        certificate:
          type: object
          properties: {}
          example: {}
        self:
          type: object
          properties: {}
          example: {}
        verify:
          type: object
          properties: {}
          example: {}
      example:
        certificate: {}
        self: {}
        verify: {}
    DomainListResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/DomainResponse'
      example:
        domains:
        - _links:
            certificate: {}
            self: {}
            verify: {}
          certificateSourceType: MANUAL
          dnsRecords:
          - fqdn: fqdn
            recordType: TXT
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: TXT
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: NOT_STARTED
        - _links:
            certificate: {}
            self: {}
            verify: {}
          certificateSourceType: MANUAL
          dnsRecords:
          - fqdn: fqdn
            recordType: TXT
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: TXT
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: NOT_STARTED
    DomainResponse:
      type: object
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        _links:
          $ref: '#/components/schemas/DomainLinks'
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
      example:
        _links:
          certificate: {}
          self: {}
          verify: {}
        certificateSourceType: MANUAL
        dnsRecords:
        - fqdn: fqdn
          recordType: TXT
          values:
          - values
          - values
          expiration: expiration
        - fqdn: fqdn
          recordType: TXT
          values:
          - values
          - values
          expiration: expiration
        domain: domain
        publicCertificate:
          subject: subject
          fingerprint: fingerprint
          expiration: expiration
        id: id
        validationStatus: NOT_STARTED
    DomainValidationStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - VERIFIED
      - COMPLETED
    Duration:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
      example:
        number: 0
        unit: unit
    EmailContent:
      title: EmailContent
      required:
      - body
      - subject
      type: object
      properties:
        subject:
          type: string
          example: Welcome to $org.name
        body:
          type: string
    EmailContentWithSender:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - required:
        - fromAddress
        - fromName
        type: object
        properties:
          fromAddress:
            type: string
          fromName:
            type: string
    EmailCustomization:
      title: Email Customization
      example:
        subject: Welcome to $org.name
        body: string
        language: cs-CZ
        isDefault: true
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - required:
        - isDefault
        - language
        type: object
        properties:
          language:
            type: string
            description: unique under each email template
            example: cs-CZ
          isDefault:
            type: boolean
    EmailCustomizationResponse:
      title: Email Customization Response Body
      description: Response body of a customized email template
      example:
        id: oel11u6DqUiMbQkpl0g4
        language: cs-CZ
        isDefault: true
        subject: Welcome to $org.name
        body: "Hello, $user.profile.firstName!"
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: /templates/email/welcome/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: /templates/email/welcome
            hints:
              allow:
              - GET
          preview:
            href: /templates/email/welcome/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
              - GET
          test:
            href: /templates/email/welcome/test
            hints:
              allow:
              - POST
      allOf:
      - $ref: '#/components/schemas/EmailCustomization'
      - type: object
        properties:
          id:
            type: string
            description: ""
            readOnly: true
            example: oel11u6DqUiMbQkpl0g4
          created:
            type: string
            format: date-time
            readOnly: true
          lastUpdated:
            type: string
            format: date-time
            readOnly: true
          _links:
            $ref: '#/components/schemas/EmailCustomizationResponse__links'
        readOnly: true
    EmailDefaultContent:
      title: EmailDefaultContent
      description: The default content for an email template
      example:
        subject: Welcome to Okta!
        body: "...<tr><td style=\"color: #5e5e5e; font-size: 22px; line-height: 22px;\"\
          >${org.name} - Welcome to Okta!</td></tr><tr><td style=\"padding-top: 24px;\
          \ vertical-align: bottom;\">Hi ${f:escapeHtml(user.firstName)},</td></tr>..."
        _links:
          self:
            href: /templates/email/welcome/default-content
            hints:
              allow:
              - GET
          template:
            href: /templates/email/welcome
            hints:
              allow:
              - GET
          test:
            href: /templates/email/welcome/test
            hints:
              allow:
              - POST
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - type: object
        properties:
          _links:
            $ref: '#/components/schemas/EmailCustomizationResponse__links'
    EmailPreview:
      title: EmailPreview
      description: The preview content of email template based on current user
      example:
      - subject: Welcome to Okta!
        body: |
          <tr>
          <td style="color:#5e5e5e;font-size:22px;line-height:22px"> henryli-oie - Welcome to Okta! </td>
          </tr>
          <tr>
          <td style="padding-top:24px;vertical-align:bottom"> Hi Henry, </td>
          </tr>
        _links:
          self:
            href: /templates/email/welcome/default-content/preview
            hints:
              allow:
              - GET
          contentSource:
            href: /templates/email/welcome/default-content
            hints:
              allow:
              - GET
          template:
            href: /templates/email/welcome
            hints:
              allow:
              - GET
          test:
            href: /templates/email/welcome/test
            hints:
              allow:
              - POST
      - subject: Welcome to MyOrg!
        body: "Hello, Henry Li!"
        _links:
          self:
            href: /templates/email/welcome/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
              - GET
          contentSource:
            href: /templates/email/welcome/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
              - GET
          template:
            href: /templates/email/welcome
            hints:
              allow:
              - GET
          test:
            href: /templates/email/welcome/test
            hints:
              allow:
              - POST
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - type: object
        properties:
          _links:
            $ref: '#/components/schemas/EmailPreview__links'
    EmailTemplate:
      title: EmailTemplate
      type: object
      properties:
        name:
          type: string
        _links:
          $ref: '#/components/schemas/EmailTemplate__links'
      description: An email template object
      example:
        name: welcome
        _links:
          self:
            href: /templates/email/welcome
            hints:
              allow:
              - GET
          customizations:
            href: /templates/email/welcome/customizations
            hints:
              allow:
              - GET
          defaultContent:
            href: /templates/email/welcome/default-content
            hints:
              allow:
              - GET
          test:
            href: /templates/email/welcome/test
            hints:
              allow:
              - POST
      x-tags:
      - Brand
    EmailTemplateTouchPointVariant:
      type: string
      enum:
      - OKTA_DEFAULT
      - FULL_THEME
    EmailTestResponse:
      type: object
      properties:
        customizationId:
          type: string
    EmailUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/EmailUserFactorProfile'
    EmailUserFactorProfile:
      type: object
      properties:
        email:
          type: string
    EnabledStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    EndUserDashboardTouchPointVariant:
      type: string
      enum:
      - OKTA_DEFAULT
      - WHITE_LOGO_BACKGROUND
      - FULL_THEME
      - LOGO_ON_FULL_WHITE_BACKGROUND
    Error:
      title: Error
      type: object
      properties:
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific error.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: A unique identifier for this error. This can be used by Okta
            Support to help with troubleshooting.
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/Error_errorCauses'
    ErrorPageTouchPointVariant:
      type: string
      enum:
      - OKTA_DEFAULT
      - BACKGROUND_SECONDARY_COLOR
      - BACKGROUND_IMAGE
    EventHook:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        verificationStatus:
          $ref: '#/components/schemas/EventHookVerificationStatus'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: {}
        createdBy: createdBy
        verificationStatus: UNVERIFIED
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: HTTP
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            authScheme:
              type: HEADER
              value: value
              key: key
            uri: uri
          version: version
        name: name
        id: id
        events:
          type: EVENT_TYPE
          items:
          - items
          - items
        status: ACTIVE
    EventHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          $ref: '#/components/schemas/EventHookChannelType'
        version:
          type: string
      example:
        type: HTTP
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          authScheme:
            type: HEADER
            value: value
            key: key
          uri: uri
        version: version
    EventHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
        uri:
          type: string
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        authScheme:
          type: HEADER
          value: value
          key: key
        uri: uri
    EventHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          type: string
      example:
        type: HEADER
        value: value
        key: key
    EventHookChannelConfigAuthSchemeType:
      type: string
      enum:
      - HEADER
    EventHookChannelConfigHeader:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    EventHookChannelType:
      type: string
      enum:
      - HTTP
    EventHookVerificationStatus:
      type: string
      enum:
      - UNVERIFIED
      - VERIFIED
    EventSubscriptionType:
      type: string
      enum:
      - EVENT_TYPE
      - FLOW_EVENT
    EventSubscriptions:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/EventSubscriptionType'
      example:
        type: EVENT_TYPE
        items:
        - items
        - items
      discriminator:
        propertyName: type
    FactorProvider:
      type: string
      enum:
      - OKTA
      - RSA
      - FIDO
      - GOOGLE
      - SYMANTEC
      - DUO
      - YUBICO
      - CUSTOM
    FactorResultType:
      type: string
      enum:
      - SUCCESS
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
      - CANCELLED
    FactorStatus:
      type: string
      enum:
      - PENDING_ACTIVATION
      - ACTIVE
      - INACTIVE
      - NOT_SETUP
      - ENROLLED
      - DISABLED
      - EXPIRED
    FactorType:
      type: string
      enum:
      - call
      - email
      - hotp
      - push
      - question
      - sms
      - token:hardware
      - token:hotp
      - token:software:totp
      - token
      - u2f
      - web
      - webauthn
    Feature:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          $ref: '#/components/schemas/EnabledStatus'
        type:
          $ref: '#/components/schemas/FeatureType'
      example:
        stage:
          state: OPEN
          value: EA
        _links:
          key: {}
        name: name
        description: description
        id: id
        type: self-service
        status: ENABLED
    FeatureStage:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FeatureStageState'
        value:
          $ref: '#/components/schemas/FeatureStageValue'
      example:
        state: OPEN
        value: EA
    FeatureStageState:
      type: string
      enum:
      - OPEN
      - CLOSED
    FeatureStageValue:
      type: string
      enum:
      - EA
      - BETA
    FeatureType:
      type: string
      enum:
      - self-service
    FipsEnum:
      type: string
      enum:
      - REQUIRED
      - OPTIONAL
    ForgotPasswordResponse:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
      example:
        resetPasswordUrl: resetPasswordUrl
    GrantOrTokenStatus:
      type: string
      enum:
      - ACTIVE
      - REVOKED
    GrantTypePolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
    Group:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastMembershipUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        objectClass:
          type: array
          readOnly: true
          items:
            type: string
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        _links:
          key: {}
        lastMembershipUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          name: name
          description: description
        objectClass:
        - objectClass
        - objectClass
        id: id
        type: OKTA_GROUP
    GroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    GroupPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    GroupProfile:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      example:
        name: name
        description: description
      x-okta-extensible: true
    GroupRule:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            type: type
            value: value
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        type: type
        actions:
          assignUserToGroups:
            groupIds:
            - groupIds
            - groupIds
        status: ACTIVE
    GroupRuleAction:
      type: object
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      example:
        assignUserToGroups:
          groupIds:
          - groupIds
          - groupIds
    GroupRuleConditions:
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      example:
        expression:
          type: type
          value: value
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
    GroupRuleExpression:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      example:
        type: type
        value: value
    GroupRuleGroupAssignment:
      type: object
      properties:
        groupIds:
          type: array
          items:
            type: string
      example:
        groupIds:
        - groupIds
        - groupIds
    GroupRuleGroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    GroupRulePeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
    GroupRuleStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - INVALID
    GroupRuleUserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    GroupSchema:
      type: object
      properties:
        $schema:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        created:
          type: string
          readOnly: true
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        description:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          type: string
          readOnly: true
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: {}
        created: created
        name: name
        description: description
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key: null
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              name: null
              description:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: DISABLE
                title: title
                type: string
                enum:
                - enum
                - enum
                required: true
                master:
                  type: PROFILE_MASTER
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: SELF
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - null
                  - null
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
    GroupSchemaAttribute:
      type: object
      properties:
        description:
          type: string
        enum:
          type: array
          items:
            type: string
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
        required:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        unique:
          type: string
      example:
        minLength: 6
        externalNamespace: externalNamespace
        description: description
        union: DISABLE
        title: title
        type: string
        enum:
        - enum
        - enum
        required: true
        master:
          type: PROFILE_MASTER
          priority:
          - type: type
            value: value
          - type: type
            value: value
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        externalName: externalName
        scope: SELF
        unique: unique
        mutability: mutability
        items:
          oneOf:
          - null
          - null
          type: type
          enum:
          - enum
          - enum
        maxLength: 0
    GroupSchemaBase:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          type: array
          items:
            type: string
        type:
          type: string
      example:
        id: id
        type: type
        properties:
          name: null
          description:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: DISABLE
            title: title
            type: string
            enum:
            - enum
            - enum
            required: true
            master:
              type: PROFILE_MASTER
              priority:
              - type: type
                value: value
              - type: type
                value: value
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: SELF
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - null
              - null
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
    GroupSchemaBaseProperties:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/GroupSchemaAttribute'
        name:
          $ref: '#/components/schemas/GroupSchemaAttribute'
      example:
        name: null
        description:
          minLength: 6
          externalNamespace: externalNamespace
          description: description
          union: DISABLE
          title: title
          type: string
          enum:
          - enum
          - enum
          required: true
          master:
            type: PROFILE_MASTER
            priority:
            - type: type
              value: value
            - type: type
              value: value
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: SELF
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - null
            - null
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
    GroupSchemaCustom:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
        required:
          type: array
          items:
            type: string
        type:
          type: string
      example:
        id: id
        type: type
        properties:
          key: null
        required:
        - required
        - required
    GroupSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
      example:
        custom:
          id: id
          type: type
          properties:
            key: null
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            name: null
            description:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: DISABLE
              title: title
              type: string
              enum:
              - enum
              - enum
              required: true
              master:
                type: PROFILE_MASTER
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: SELF
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - null
                - null
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
    GroupType:
      type: string
      enum:
      - OKTA_GROUP
      - APP_GROUP
      - BUILT_IN
    HardwareUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/HardwareUserFactorProfile'
    HardwareUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    HrefObject:
      title: hrefObject
      type: object
      properties:
        href:
          type: string
        hints:
          $ref: '#/components/schemas/HrefObject_hints'
      description: Used for links
      example:
        hints:
          allow:
          - GET
          - GET
        href: href
    HttpMethod:
      type: string
      enum:
      - GET
      - PUT
      - DELETE
      - POST
    IdentityProvider:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          type: string
          x-okta-known-values:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        protocol:
          algorithms:
            request:
              signature:
                scope: RESPONSE
                algorithm: algorithm
            response: null
          relayState:
            format: OPAQUE
          settings:
            nameFormat: nameFormat
          endpoints:
            acs:
              destination: destination
              binding: HTTP-POST
              type: INSTANCE
              url: url
            authorization: null
            userInfo: null
            metadata: null
            jwks: null
            slo: null
            sso: null
            token: null
          credentials:
            trust:
              revocation: CRL
              audience: audience
              revocationCacheLifetime: 0
              kid: kid
              issuer: issuer
            client:
              client_secret: client_secret
              client_id: client_id
            signing:
              kid: kid
          scopes:
          - scopes
          - scopes
          type: SAML2
          issuer: null
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        issuerMode: ORG_URL
        policy: ""
        status: ACTIVE
    IdentityProviderApplicationUser:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
        externalId:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
      example:
        lastUpdated: lastUpdated
        _embedded:
          key: {}
        _links:
          key: {}
        created: created
        profile:
          key: {}
        externalId: externalId
        id: id
    IdentityProviderCredentials:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
      example:
        trust:
          revocation: CRL
          audience: audience
          revocationCacheLifetime: 0
          kid: kid
          issuer: issuer
        client:
          client_secret: client_secret
          client_id: client_id
        signing:
          kid: kid
    IdentityProviderCredentialsClient:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      example:
        client_secret: client_secret
        client_id: client_id
    IdentityProviderCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
      example:
        kid: kid
    IdentityProviderCredentialsTrust:
      type: object
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrustRevocation'
        revocationCacheLifetime:
          type: integer
      example:
        revocation: CRL
        audience: audience
        revocationCacheLifetime: 0
        kid: kid
        issuer: issuer
    IdentityProviderCredentialsTrustRevocation:
      type: string
      enum:
      - CRL
      - DELTA_CRL
      - OCSP
    IdentityProviderPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - type: object
        properties:
          accountLink:
            $ref: '#/components/schemas/PolicyAccountLink'
          maxClockSkew:
            type: integer
          provisioning:
            $ref: '#/components/schemas/Provisioning'
          subject:
            $ref: '#/components/schemas/PolicySubject'
    IdentityProviderPolicyProvider:
      type: string
      enum:
      - ANY
      - OKTA
      - SPECIFIC_IDP
    IdentityProviderPolicyRuleCondition:
      type: object
      properties:
        idpIds:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/IdentityProviderPolicyProvider'
      example:
        idpIds:
        - idpIds
        - idpIds
        provider: ANY
    ImageUploadResponse:
      type: object
      properties:
        url:
          type: string
          readOnly: true
      example:
        url: url
    InactivityPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
      example:
        number: 6
        unit: unit
    InlineHook:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: HTTP
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method: method
            authScheme:
              type: type
              value: value
              key: key
            uri: uri
          version: version
        name: name
        id: id
        type: com.okta.oauth2.tokens.transform
        version: version
        status: ACTIVE
    InlineHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/InlineHookChannelConfig'
        type:
          $ref: '#/components/schemas/InlineHookChannelType'
        version:
          type: string
      example:
        type: HTTP
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method: method
          authScheme:
            type: type
            value: value
            key: key
          uri: uri
        version: version
    InlineHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
        uri:
          type: string
        method:
          type: string
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method: method
        authScheme:
          type: type
          value: value
          key: key
        uri: uri
    InlineHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
      example:
        type: type
        value: value
        key: key
    InlineHookChannelConfigHeaders:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    InlineHookChannelType:
      type: string
      enum:
      - HTTP
    InlineHookPayload:
      type: object
      x-okta-extensible: true
    InlineHookResponse:
      type: object
      properties:
        commands:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
      example:
        commands:
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
    InlineHookResponseCommandValue:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
      example:
        op: op
        path: path
        value: value
    InlineHookResponseCommands:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
      example:
        type: type
        value:
        - op: op
          path: path
          value: value
        - op: op
          path: path
          value: value
    InlineHookStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    InlineHookType:
      type: string
      enum:
      - com.okta.oauth2.tokens.transform
      - com.okta.import.transform
      - com.okta.saml.tokens.transform
      - com.okta.user.pre-registration
      - com.okta.user.credential.password.import
    IssuerMode:
      type: string
      enum:
      - ORG_URL
      - CUSTOM_URL
    JsonWebKey:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        alg:
          type: string
        created:
          type: string
          format: date-time
        e:
          type: string
        expiresAt:
          type: string
          format: date-time
        key_ops:
          type: array
          items:
            type: string
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          type: string
          format: date-time
        "n":
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
      example:
        _links:
          key: {}
        e: e
        created: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        expiresAt: 2000-01-23T04:56:07.000+00:00
        "n": "n"
        kty: kty
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        x5u: x5u
        alg: alg
        status: status
    JwkUse:
      type: object
      properties:
        use:
          $ref: '#/components/schemas/JwkUseType'
    JwkUseType:
      type: string
      enum:
      - sig
    KnowledgeConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
    LifecycleCreateSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      example:
        status: ENABLED
    LifecycleDeactivateSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      example:
        status: null
    LifecycleExpirationPolicyRuleCondition:
      type: object
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
      example:
        number: 1
        unit: unit
        lifecycleStatus: lifecycleStatus
    LifecycleStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    LinkedObject:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
      example:
        _links:
          key: {}
        associated:
          name: name
          description: description
          title: title
          type: USER
        primary: null
    LinkedObjectDetails:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/LinkedObjectDetailsType'
      example:
        name: name
        description: description
        title: title
        type: USER
    LinkedObjectDetailsType:
      type: string
      enum:
      - USER
    LogActor:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detail:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      example:
        alternateId: alternateId
        displayName: displayName
        detail:
          key: {}
        id: id
        type: type
    LogAuthenticationContext:
      type: object
      properties:
        authenticationProvider:
          $ref: '#/components/schemas/LogAuthenticationProvider'
        authenticationStep:
          type: integer
          readOnly: true
        credentialProvider:
          $ref: '#/components/schemas/LogCredentialProvider'
        credentialType:
          $ref: '#/components/schemas/LogCredentialType'
        externalSessionId:
          type: string
          readOnly: true
        interface:
          type: string
          readOnly: true
        issuer:
          $ref: '#/components/schemas/LogIssuer'
      example:
        credentialType: OTP
        authenticationProvider: OKTA_AUTHENTICATION_PROVIDER
        credentialProvider: OKTA_AUTHENTICATION_PROVIDER
        externalSessionId: externalSessionId
        interface: interface
        authenticationStep: 0
        issuer:
          id: id
          type: type
    LogAuthenticationProvider:
      type: string
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - ACTIVE_DIRECTORY
      - LDAP
      - FEDERATION
      - SOCIAL
      - FACTOR_PROVIDER
    LogClient:
      type: object
      properties:
        device:
          type: string
          readOnly: true
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          type: string
          readOnly: true
        ipAddress:
          type: string
          readOnly: true
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          type: string
          readOnly: true
      example:
        zone: zone
        ipAddress: ipAddress
        userAgent:
          os: os
          browser: browser
          rawUserAgent: rawUserAgent
        id: id
        device: device
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
    LogCredentialProvider:
      type: string
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - OKTA_CREDENTIAL_PROVIDER
      - RSA
      - SYMANTEC
      - GOOGLE
      - DUO
      - YUBIKEY
    LogCredentialType:
      type: string
      enum:
      - OTP
      - SMS
      - PASSWORD
      - ASSERTION
      - IWA
      - EMAIL
      - OAUTH2
      - JWT
    LogDebugContext:
      type: object
      properties:
        debugData:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
      example:
        debugData:
          key: {}
    LogEvent:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          type: string
          readOnly: true
        eventType:
          type: string
          readOnly: true
        legacyEventType:
          type: string
          readOnly: true
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          type: string
          format: date-time
          readOnly: true
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          $ref: '#/components/schemas/LogSeverity'
        target:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogTarget'
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
      example:
        severity: DEBUG
        request:
          ipChain:
          - ip: ip
            source: source
            geographicalContext: null
            version: version
          - ip: ip
            source: source
            geographicalContext: null
            version: version
        authenticationContext:
          credentialType: OTP
          authenticationProvider: OKTA_AUTHENTICATION_PROVIDER
          credentialProvider: OKTA_AUTHENTICATION_PROVIDER
          externalSessionId: externalSessionId
          interface: interface
          authenticationStep: 0
          issuer:
            id: id
            type: type
        eventType: eventType
        published: 2000-01-23T04:56:07.000+00:00
        securityContext:
          asNumber: 5
          domain: domain
          isp: isp
          isProxy: true
          asOrg: asOrg
        uuid: uuid
        version: version
        target:
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: {}
          type: type
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: {}
          type: type
        actor:
          alternateId: alternateId
          displayName: displayName
          detail:
            key: {}
          id: id
          type: type
        debugContext:
          debugData:
            key: {}
        displayMessage: displayMessage
        client:
          zone: zone
          ipAddress: ipAddress
          userAgent:
            os: os
            browser: browser
            rawUserAgent: rawUserAgent
          id: id
          device: device
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        legacyEventType: legacyEventType
        outcome:
          result: result
          reason: reason
        transaction:
          detail:
            key: {}
          id: id
          type: type
    LogGeographicalContext:
      type: object
      properties:
        city:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
      example:
        country: country
        city: city
        postalCode: postalCode
        state: state
        geolocation:
          lon: 1.4658129805029452
          lat: 6.027456183070403
    LogGeolocation:
      type: object
      properties:
        lat:
          type: number
          format: double
          readOnly: true
        lon:
          type: number
          format: double
          readOnly: true
      example:
        lon: 1.4658129805029452
        lat: 6.027456183070403
    LogIpAddress:
      type: object
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
      example:
        ip: ip
        source: source
        geographicalContext: null
        version: version
    LogIssuer:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      example:
        id: id
        type: type
    LogOutcome:
      type: object
      properties:
        reason:
          type: string
          readOnly: true
        result:
          type: string
          readOnly: true
      example:
        result: result
        reason: reason
    LogRequest:
      type: object
      properties:
        ipChain:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogIpAddress'
      example:
        ipChain:
        - ip: ip
          source: source
          geographicalContext: null
          version: version
        - ip: ip
          source: source
          geographicalContext: null
          version: version
    LogSecurityContext:
      type: object
      properties:
        asNumber:
          type: integer
          readOnly: true
        asOrg:
          type: string
          readOnly: true
        domain:
          type: string
          readOnly: true
        isProxy:
          type: boolean
          readOnly: true
        isp:
          type: string
          readOnly: true
      example:
        asNumber: 5
        domain: domain
        isp: isp
        isProxy: true
        asOrg: asOrg
    LogSeverity:
      type: string
      enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
    LogTarget:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detailEntry:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: {}
        type: type
    LogTransaction:
      type: object
      properties:
        detail:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      example:
        detail:
          key: {}
        id: id
        type: type
    LogUserAgent:
      type: object
      properties:
        browser:
          type: string
          readOnly: true
        os:
          type: string
          readOnly: true
        rawUserAgent:
          type: string
          readOnly: true
      example:
        os: os
        browser: browser
        rawUserAgent: rawUserAgent
    MDMEnrollmentPolicyEnrollment:
      type: string
      enum:
      - OMM
      - ANY_OR_NONE
    MDMEnrollmentPolicyRuleCondition:
      type: object
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyEnrollment'
      example:
        blockNonSafeAndroid: true
        enrollment: OMM
    NetworkZone:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        id:
          type: string
          readOnly: true
        name:
          type: string
        system:
          type: boolean
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        proxyType:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
        proxies:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
        asns:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
      example:
        gateways:
        - type: CIDR
          value: value
        - type: CIDR
          value: value
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        usage: POLICY
        proxyType: proxyType
        type: IP
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        name: name
        locations:
        - country: country
          region: region
        - country: country
          region: region
        proxies:
        - null
        - null
        asns:
        - asns
        - asns
        id: id
        status: ACTIVE
    NetworkZoneAddress:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkZoneAddressType'
        value:
          type: string
      example:
        type: CIDR
        value: value
    NetworkZoneAddressType:
      type: string
      enum:
      - CIDR
      - RANGE
    NetworkZoneLocation:
      type: object
      properties:
        country:
          type: string
        region:
          type: string
      example:
        country: country
        region: region
    NetworkZoneStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    NetworkZoneType:
      type: string
      enum:
      - IP
      - DYNAMIC
    NetworkZoneUsage:
      type: string
      enum:
      - POLICY
      - BLOCKLIST
    NotificationType:
      type: string
      enum:
      - CONNECTOR_AGENT
      - USER_LOCKED_OUT
      - APP_IMPORT
      - LDAP_AGENT
      - AD_AGENT
      - OKTA_ANNOUNCEMENT
      - OKTA_ISSUE
      - OKTA_UPDATE
      - IWA_AGENT
      - USER_DEPROVISION
      - REPORT_SUSPICIOUS_ACTIVITY
      - RATELIMIT_NOTIFICATION
    OAuth2Actor:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
      example:
        id: id
        type: type
    OAuth2Claim:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        alwaysIncludeInToken:
          type: boolean
        claimType:
          $ref: '#/components/schemas/OAuth2ClaimType'
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          $ref: '#/components/schemas/OAuth2ClaimGroupFilterType'
        id:
          type: string
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        value:
          type: string
        valueType:
          $ref: '#/components/schemas/OAuth2ClaimValueType'
      example:
        group_filter_type: STARTS_WITH
        claimType: IDENTITY
        system: true
        alwaysIncludeInToken: true
        _links:
          key: {}
        valueType: EXPRESSION
        name: name
        id: id
        conditions:
          scopes:
          - scopes
          - scopes
        value: value
        status: ACTIVE
    OAuth2ClaimConditions:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
      example:
        scopes:
        - scopes
        - scopes
    OAuth2ClaimGroupFilterType:
      type: string
      enum:
      - STARTS_WITH
      - EQUALS
      - CONTAINS
      - REGEX
    OAuth2ClaimType:
      type: string
      enum:
      - IDENTITY
      - RESOURCE
    OAuth2ClaimValueType:
      type: string
      enum:
      - EXPRESSION
      - GROUPS
      - SYSTEM
    OAuth2Client:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        client_id:
          type: string
          readOnly: true
        client_name:
          type: string
          readOnly: true
        client_uri:
          type: string
          readOnly: true
        logo_uri:
          type: string
          readOnly: true
      example:
        client_uri: client_uri
        _links:
          key: {}
        logo_uri: logo_uri
        client_name: client_name
        client_id: client_id
    OAuth2RefreshToken:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          key: {}
        _links:
          key: {}
        createdBy:
          id: id
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: ACTIVE
    OAuth2Scope:
      type: object
      properties:
        consent:
          $ref: '#/components/schemas/OAuth2ScopeConsentType'
        default:
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
          readOnly: true
        metadataPublish:
          $ref: '#/components/schemas/OAuth2ScopeMetadataPublish'
        name:
          type: string
        system:
          type: boolean
      example:
        default: true
        system: true
        displayName: displayName
        name: name
        description: description
        metadataPublish: ALL_CLIENTS
        id: id
        consent: REQUIRED
    OAuth2ScopeConsentGrant:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        clientId:
          type: string
        userId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopeId:
          type: string
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        scopeId: scopeId
        clientId: clientId
        _embedded:
          key: {}
        _links:
          key: {}
        createdBy:
          id: id
          type: type
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        source: END_USER
        userId: userId
        issuer: issuer
        status: ACTIVE
    OAuth2ScopeConsentGrantSource:
      type: string
      enum:
      - END_USER
      - ADMIN
    OAuth2ScopeConsentType:
      type: string
      enum:
      - REQUIRED
      - IMPLICIT
      - ADMIN
    OAuth2ScopeMetadataPublish:
      type: string
      enum:
      - ALL_CLIENTS
      - NO_CLIENTS
    OAuth2ScopesMediationPolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
    OAuth2Token:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          key: {}
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: ACTIVE
    OAuthApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - type: object
        properties:
          oauthClient:
            $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
    OAuthEndpointAuthenticationMethod:
      type: string
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
      - private_key_jwt
    OAuthGrantType:
      type: string
      enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
    OAuthResponseType:
      type: string
      enum:
      - code
      - token
      - id_token
    OktaSignOnPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - type: object
        properties:
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyConditions'
    OktaSignOnPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - type: object
        properties:
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyFactorPromptMode:
      type: string
      enum:
      - ALWAYS
      - DEVICE
      - SESSION
    OktaSignOnPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - type: object
        properties:
          actions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
          name:
            type: string
    OktaSignOnPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - type: object
        properties:
          signon:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
    OktaSignOnPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - type: object
        properties:
          authContext:
            $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyRuleSignonActions:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
        factorLifetime:
          type: integer
        factorPromptMode:
          $ref: '#/components/schemas/OktaSignOnPolicyFactorPromptMode'
        rememberDeviceByDefault:
          type: boolean
          default: false
        requireFactor:
          type: boolean
          default: false
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
      example:
        rememberDeviceByDefault: false
        access: ALLOW
        factorPromptMode: ALWAYS
        session:
          maxSessionLifetimeMinutes: 5
          usePersistentCookie: false
          maxSessionIdleMinutes: 1
        factorLifetime: 6
        requireFactor: false
    OktaSignOnPolicyRuleSignonSessionActions:
      type: object
      properties:
        maxSessionIdleMinutes:
          type: integer
        maxSessionLifetimeMinutes:
          type: integer
        usePersistentCookie:
          type: boolean
          default: false
      example:
        maxSessionLifetimeMinutes: 5
        usePersistentCookie: false
        maxSessionIdleMinutes: 1
    OpenIdConnectApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          credentials:
            $ref: '#/components/schemas/OAuthApplicationCredentials'
          name:
            type: string
            default: oidc_client
          settings:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
      x-okta-defined-as:
        name: oidc_client
    OpenIdConnectApplicationConsentMethod:
      type: string
      enum:
      - REQUIRED
      - TRUSTED
    OpenIdConnectApplicationIdpInitiatedLogin:
      type: object
      properties:
        mode:
          type: string
        default_scope:
          type: array
          items:
            type: string
    OpenIdConnectApplicationIssuerMode:
      type: string
      enum:
      - CUSTOM_URL
      - ORG_URL
    OpenIdConnectApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          oauthClient:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
    OpenIdConnectApplicationSettingsClient:
      type: object
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        grant_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthGrantType'
        initiate_login_uri:
          type: string
        issuer_mode:
          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          type: array
          items:
            type: string
        redirect_uris:
          type: array
          items:
            type: string
        wildcard_redirect:
          type: string
        response_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthResponseType'
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        tos_uri:
          type: string
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
    OpenIdConnectApplicationSettingsClientKeys:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JsonWebKey'
    OpenIdConnectApplicationSettingsRefreshToken:
      type: object
      properties:
        leeway:
          type: integer
        rotation_type:
          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
    OpenIdConnectApplicationType:
      type: string
      enum:
      - web
      - native
      - browser
      - service
    OpenIdConnectRefreshTokenRotationType:
      type: string
      enum:
      - rotate
      - static
    Org2OrgApplication:
      allOf:
      - $ref: '#/components/schemas/SamlApplication'
      - type: object
        properties:
          name: {}
          settings:
            $ref: '#/components/schemas/Org2OrgApplicationSettings'
      x-okta-defined-as:
        name: okta_org2org
    Org2OrgApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/SamlApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/Org2OrgApplicationSettingsApp'
    Org2OrgApplicationSettingsApp:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          acsUrl:
            type: string
          audRestriction:
            type: string
          baseUrl:
            type: string
    OrgContactType:
      type: string
      enum:
      - BILLING
      - TECHNICAL
    OrgContactTypeObj:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
        contactType:
          $ref: '#/components/schemas/OrgContactType'
      example:
        _links:
          key: {}
        contactType: BILLING
    OrgContactUser:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        userId:
          type: string
      example:
        _links:
          key: {}
        userId: userId
    OrgOktaCommunicationSetting:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
        optOutEmailUsers:
          type: boolean
          readOnly: true
      example:
        _links:
          key: {}
        optOutEmailUsers: true
    OrgOktaSupportSetting:
      type: string
      enum:
      - DISABLED
      - ENABLED
    OrgOktaSupportSettingsObj:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
        expiration:
          type: string
          format: date-time
          readOnly: true
        support:
          $ref: '#/components/schemas/OrgOktaSupportSetting'
      example:
        _links:
          key: {}
        expiration: 2000-01-23T04:56:07.000+00:00
        support: DISABLED
    OrgPreferences:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
        showEndUserFooter:
          type: boolean
          readOnly: true
      example:
        _links:
          key: {}
        showEndUserFooter: true
    OrgSetting:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        endUserSupportHelpURL:
          type: string
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          type: string
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        supportPhoneNumber:
          type: string
        website:
          type: string
      example:
        country: country
        website: website
        supportPhoneNumber: supportPhoneNumber
        _links:
          key: {}
        address2: address2
        city: city
        address1: address1
        created: 2000-01-23T04:56:07.000+00:00
        companyName: companyName
        postalCode: postalCode
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        phoneNumber: phoneNumber
        endUserSupportHelpURL: endUserSupportHelpURL
        subdomain: subdomain
        id: id
        state: state
        status: status
    PasswordCredential:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          format: password
      example:
        hook:
          type: type
        value: ""
        hash:
          salt: salt
          saltOrder: saltOrder
          workFactor: 0
          value: value
          algorithm: BCRYPT
    PasswordCredentialHash:
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
      example:
        salt: salt
        saltOrder: saltOrder
        workFactor: 0
        value: value
        algorithm: BCRYPT
    PasswordCredentialHashAlgorithm:
      type: string
      enum:
      - BCRYPT
      - SHA-512
      - SHA-256
      - SHA-1
      - MD5
    PasswordCredentialHook:
      type: object
      properties:
        type:
          type: string
      example:
        type: type
    PasswordDictionary:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
    PasswordDictionaryCommon:
      type: object
      properties:
        exclude:
          type: boolean
          default: false
    PasswordExpirationPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
      example:
        number: 5
        unit: unit
    PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - type: object
        properties:
          conditions:
            $ref: '#/components/schemas/PasswordPolicyConditions'
          settings:
            $ref: '#/components/schemas/PasswordPolicySettings'
    PasswordPolicyAuthenticationProviderCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderType'
      example:
        include:
        - include
        - include
        provider: ACTIVE_DIRECTORY
    PasswordPolicyAuthenticationProviderType:
      type: string
      enum:
      - ACTIVE_DIRECTORY
      - ANY
      - LDAP
      - OKTA
    PasswordPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - type: object
        properties:
          authProvider:
            $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicyDelegationSettings:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
    PasswordPolicyDelegationSettingsOptions:
      type: object
      properties:
        skipUnlock:
          type: boolean
    PasswordPolicyPasswordSettings:
      type: object
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
    PasswordPolicyPasswordSettingsAge:
      type: object
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
    PasswordPolicyPasswordSettingsComplexity:
      type: object
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          type: array
          items:
            type: string
        excludeUsername:
          type: boolean
          default: true
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
    PasswordPolicyPasswordSettingsLockout:
      type: object
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          type: array
          items:
            type: string
    PasswordPolicyRecoveryEmail:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryEmailProperties:
      type: object
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
    PasswordPolicyRecoveryEmailRecoveryToken:
      type: object
      properties:
        tokenLifetimeMinutes:
          type: integer
    PasswordPolicyRecoveryFactorSettings:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryFactors:
      type: object
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
    PasswordPolicyRecoveryQuestion:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryQuestionComplexity:
      type: object
      properties:
        minLength:
          type: integer
          readOnly: true
    PasswordPolicyRecoveryQuestionProperties:
      type: object
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
    PasswordPolicyRecoverySettings:
      type: object
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
    PasswordPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - type: object
        properties:
          actions:
            $ref: '#/components/schemas/PasswordPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/PasswordPolicyRuleConditions'
          name:
            type: string
    PasswordPolicyRuleAction:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
      example:
        access: null
    PasswordPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - type: object
        properties:
          passwordChange:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServicePasswordReset:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServiceUnlock:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
    PasswordPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - type: object
        properties:
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicySettings:
      type: object
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
    PasswordSettingObject:
      type: object
      properties:
        change:
          $ref: '#/components/schemas/ChangeEnum'
        seed:
          $ref: '#/components/schemas/SeedEnum'
        status:
          $ref: '#/components/schemas/EnabledStatus'
      example:
        seed: OKTA
        change: KEEP_EXISTING
        status: null
    PlatformConditionEvaluatorPlatform:
      type: object
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          $ref: '#/components/schemas/PolicyPlatformType'
      example:
        os:
          expression: expression
          type: ANDROID
          version:
            matchType: EXPRESSION
            value: value
        type: DESKTOP
    PlatformConditionEvaluatorPlatformOperatingSystem:
      type: object
      properties:
        expression:
          type: string
        type:
          $ref: '#/components/schemas/PolicyPlatformOperatingSystemType'
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
      example:
        expression: expression
        type: ANDROID
        version:
          matchType: EXPRESSION
          value: value
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/PlatformConditionOperatingSystemVersionMatchType'
        value:
          type: string
      example:
        matchType: EXPRESSION
        value: value
    PlatformConditionOperatingSystemVersionMatchType:
      type: string
      enum:
      - EXPRESSION
      - SEMVER
    PlatformPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
        include:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
      example:
        include:
        - null
        - null
        exclude:
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
        - os:
            expression: expression
            type: ANDROID
            version:
              matchType: EXPRESSION
              value: value
          type: DESKTOP
    Policy:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        _embedded:
          key: {}
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        conditions:
          app:
            include:
            - null
            - null
            exclude:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
          authContext:
            authType: ANY
          clients:
            include:
            - include
            - include
          userStatus:
            value: null
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
          identityProvider:
            idpIds:
            - idpIds
            - idpIds
            provider: ANY
          platform:
            include:
            - null
            - null
            exclude:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
          users:
            userLifecycleAttribute:
              matchingValue: matchingValue
              attributeName: attributeName
            include:
            - include
            - include
            passwordExpiration:
              number: 5
              unit: unit
            lifecycleExpiration:
              number: 1
              unit: unit
              lifecycleStatus: lifecycleStatus
            inactivity:
              number: 6
              unit: unit
            exclude:
            - exclude
            - exclude
          network:
            include:
            - include
            - include
            connection: ANYWHERE
            exclude:
            - exclude
            - exclude
          authProvider:
            include:
            - include
            - include
            provider: ACTIVE_DIRECTORY
          beforeScheduledAction:
            duration:
              number: 0
              unit: unit
            lifecycleAction:
              status: ACTIVE
          mdmEnrollment:
            blockNonSafeAndroid: true
            enrollment: OMM
          grantTypes:
            include:
            - include
            - include
          userIdentifier:
            patterns:
            - matchType: SUFFIX
              value: value
            - matchType: SUFFIX
              value: value
            attribute: attribute
            type: IDENTIFIER
          context: ""
          risk:
            behaviors:
            - behaviors
            - behaviors
          riskScore:
            level: level
          scopes:
            include:
            - include
            - include
          device:
            rooted: true
            trustLevel: ANY
            migrated: true
            platform:
              types:
              - IOS
              - IOS
              supportedMDMFrameworks:
              - AFW
              - AFW
          apps:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        priority: 5
        type: OAUTH_AUTHORIZATION_POLICY
        status: ACTIVE
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
    PolicyAccess:
      type: string
      enum:
      - ALLOW
      - DENY
    PolicyAccountLink:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PolicyAccountLinkAction'
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
    PolicyAccountLinkAction:
      type: string
      enum:
      - AUTO
      - DISABLED
    PolicyAccountLinkFilter:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
    PolicyAccountLinkFilterGroups:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    PolicyNetworkCondition:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PolicyNetworkConnection'
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        connection: ANYWHERE
        exclude:
        - exclude
        - exclude
    PolicyNetworkConnection:
      type: string
      enum:
      - ANYWHERE
      - ZONE
    PolicyPeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
    PolicyPlatformOperatingSystemType:
      type: string
      enum:
      - ANDROID
      - IOS
      - WINDOWS
      - OSX
      - OTHER
      - ANY
    PolicyPlatformType:
      type: string
      enum:
      - DESKTOP
      - MOBILE
      - OTHER
      - ANY
    PolicyRule:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/PolicyRuleType'
        name:
          type: string
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        actions:
          $ref: '#/components/schemas/PolicyRuleActions'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: false
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        priority: 0
        type: SIGN_ON
        conditions:
          app:
            include:
            - null
            - null
            exclude:
            - name: name
              id: id
              type: APP_TYPE
            - name: name
              id: id
              type: APP_TYPE
          authContext:
            authType: ANY
          clients:
            include:
            - include
            - include
          userStatus:
            value: null
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
          identityProvider:
            idpIds:
            - idpIds
            - idpIds
            provider: ANY
          platform:
            include:
            - null
            - null
            exclude:
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
            - os:
                expression: expression
                type: ANDROID
                version:
                  matchType: EXPRESSION
                  value: value
              type: DESKTOP
          users:
            userLifecycleAttribute:
              matchingValue: matchingValue
              attributeName: attributeName
            include:
            - include
            - include
            passwordExpiration:
              number: 5
              unit: unit
            lifecycleExpiration:
              number: 1
              unit: unit
              lifecycleStatus: lifecycleStatus
            inactivity:
              number: 6
              unit: unit
            exclude:
            - exclude
            - exclude
          network:
            include:
            - include
            - include
            connection: ANYWHERE
            exclude:
            - exclude
            - exclude
          authProvider:
            include:
            - include
            - include
            provider: ACTIVE_DIRECTORY
          beforeScheduledAction:
            duration:
              number: 0
              unit: unit
            lifecycleAction:
              status: ACTIVE
          mdmEnrollment:
            blockNonSafeAndroid: true
            enrollment: OMM
          grantTypes:
            include:
            - include
            - include
          userIdentifier:
            patterns:
            - matchType: SUFFIX
              value: value
            - matchType: SUFFIX
              value: value
            attribute: attribute
            type: IDENTIFIER
          context: ""
          risk:
            behaviors:
            - behaviors
            - behaviors
          riskScore:
            level: level
          scopes:
            include:
            - include
            - include
          device:
            rooted: true
            trustLevel: ANY
            migrated: true
            platform:
              types:
              - IOS
              - IOS
              supportedMDMFrameworks:
              - AFW
              - AFW
          apps:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        actions:
          passwordChange:
            access: null
          selfServicePasswordReset: null
          selfServiceUnlock: null
          signon:
            rememberDeviceByDefault: false
            access: ALLOW
            factorPromptMode: ALWAYS
            session:
              maxSessionLifetimeMinutes: 5
              usePersistentCookie: false
              maxSessionIdleMinutes: 1
            factorLifetime: 6
            requireFactor: false
          enroll:
            self: CHALLENGE
        status: ACTIVE
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
    PolicyRuleActions:
      type: object
      properties:
        enroll:
          $ref: '#/components/schemas/PolicyRuleActionsEnroll'
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
      example:
        passwordChange:
          access: null
        selfServicePasswordReset: null
        selfServiceUnlock: null
        signon:
          rememberDeviceByDefault: false
          access: ALLOW
          factorPromptMode: ALWAYS
          session:
            maxSessionLifetimeMinutes: 5
            usePersistentCookie: false
            maxSessionIdleMinutes: 1
          factorLifetime: 6
          requireFactor: false
        enroll:
          self: CHALLENGE
    PolicyRuleActionsEnroll:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'
      example:
        self: CHALLENGE
    PolicyRuleActionsEnrollSelf:
      type: string
      enum:
      - CHALLENGE
      - LOGIN
      - NEVER
    PolicyRuleAuthContextCondition:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/PolicyRuleAuthContextType'
      example:
        authType: ANY
    PolicyRuleAuthContextType:
      type: string
      enum:
      - ANY
      - RADIUS
    PolicyRuleConditions:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
      example:
        app:
          include:
          - null
          - null
          exclude:
          - name: name
            id: id
            type: APP_TYPE
          - name: name
            id: id
            type: APP_TYPE
        authContext:
          authType: ANY
        clients:
          include:
          - include
          - include
        userStatus:
          value: null
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
        identityProvider:
          idpIds:
          - idpIds
          - idpIds
          provider: ANY
        platform:
          include:
          - null
          - null
          exclude:
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
          - os:
              expression: expression
              type: ANDROID
              version:
                matchType: EXPRESSION
                value: value
            type: DESKTOP
        users:
          userLifecycleAttribute:
            matchingValue: matchingValue
            attributeName: attributeName
          include:
          - include
          - include
          passwordExpiration:
            number: 5
            unit: unit
          lifecycleExpiration:
            number: 1
            unit: unit
            lifecycleStatus: lifecycleStatus
          inactivity:
            number: 6
            unit: unit
          exclude:
          - exclude
          - exclude
        network:
          include:
          - include
          - include
          connection: ANYWHERE
          exclude:
          - exclude
          - exclude
        authProvider:
          include:
          - include
          - include
          provider: ACTIVE_DIRECTORY
        beforeScheduledAction:
          duration:
            number: 0
            unit: unit
          lifecycleAction:
            status: ACTIVE
        mdmEnrollment:
          blockNonSafeAndroid: true
          enrollment: OMM
        grantTypes:
          include:
          - include
          - include
        userIdentifier:
          patterns:
          - matchType: SUFFIX
            value: value
          - matchType: SUFFIX
            value: value
          attribute: attribute
          type: IDENTIFIER
        context: ""
        risk:
          behaviors:
          - behaviors
          - behaviors
        riskScore:
          level: level
        scopes:
          include:
          - include
          - include
        device:
          rooted: true
          trustLevel: ANY
          migrated: true
          platform:
            types:
            - IOS
            - IOS
            supportedMDMFrameworks:
            - AFW
            - AFW
        apps:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
    PolicyRuleType:
      type: string
      enum:
      - SIGN_ON
      - PASSWORD
      - ACCESS_POLICY
      - IDP_DISCOVERY
      - MFA_ENROLL
    PolicySubject:
      type: object
      properties:
        filter:
          type: string
        format:
          type: array
          items:
            type: string
        matchAttribute:
          type: string
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
    PolicySubjectMatchType:
      type: string
      enum:
      - USERNAME
      - EMAIL
      - USERNAME_OR_EMAIL
      - CUSTOM_ATTRIBUTE
    PolicyType:
      type: string
      enum:
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
      - IDP_DISCOVERY
      - PROFILE_ENROLLMENT
      - ACCESS_POLICY
    PolicyUserNameTemplate:
      type: object
      properties:
        template:
          type: string
    PolicyUserStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - PENDING
      - DELETED
      - EXPIRED_PASSWORD
      - ACTIVATING
      - SUSPENDED
      - DELETING
    PossessionConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
      - type: object
        properties:
          deviceBound:
            type: string
          hardwareProtection:
            type: string
          phishingResistant:
            type: string
          userPresence:
            type: string
    PreRegistrationInlineHook:
      type: object
      properties:
        inlineHookId:
          type: string
    ProfileEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
    ProfileEnrollmentPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - type: object
        properties:
          actions:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
          name:
            type: string
    ProfileEnrollmentPolicyRuleAction:
      type: object
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          type: array
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
        profileAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
        targetGroupIds:
          type: array
          items:
            type: string
        unknownUserAction:
          type: string
    ProfileEnrollmentPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - type: object
        properties:
          profileEnrollment:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
    ProfileEnrollmentPolicyRuleActivationRequirement:
      type: object
      properties:
        emailVerification:
          type: boolean
    ProfileEnrollmentPolicyRuleProfileAttribute:
      type: object
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
    ProfileMapping:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: true
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingSource'
      example:
        _links:
          key: {}
        id: id
        source:
          _links:
            key: {}
          name: name
          id: id
          type: type
        properties:
          key:
            expression: expression
            pushStatus: PUSH
        target: null
    ProfileMappingProperty:
      type: object
      properties:
        expression:
          type: string
        pushStatus:
          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
      example:
        expression: expression
        pushStatus: PUSH
    ProfileMappingPropertyPushStatus:
      type: string
      enum:
      - PUSH
      - DONT_PUSH
    ProfileMappingSource:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      example:
        _links:
          key: {}
        name: name
        id: id
        type: type
    ProfileSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
      example:
        status: null
    Protocol:
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          type: array
          items:
            type: string
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          $ref: '#/components/schemas/ProtocolType'
      example:
        algorithms:
          request:
            signature:
              scope: RESPONSE
              algorithm: algorithm
          response: null
        relayState:
          format: OPAQUE
        settings:
          nameFormat: nameFormat
        endpoints:
          acs:
            destination: destination
            binding: HTTP-POST
            type: INSTANCE
            url: url
          authorization: null
          userInfo: null
          metadata: null
          jwks: null
          slo: null
          sso: null
          token: null
        credentials:
          trust:
            revocation: CRL
            audience: audience
            revocationCacheLifetime: 0
            kid: kid
            issuer: issuer
          client:
            client_secret: client_secret
            client_id: client_id
          signing:
            kid: kid
        scopes:
        - scopes
        - scopes
        type: SAML2
        issuer: null
    ProtocolAlgorithmType:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
      example:
        signature:
          scope: RESPONSE
          algorithm: algorithm
    ProtocolAlgorithmTypeSignature:
      type: object
      properties:
        algorithm:
          type: string
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignatureScope'
      example:
        scope: RESPONSE
        algorithm: algorithm
    ProtocolAlgorithmTypeSignatureScope:
      type: string
      enum:
      - RESPONSE
      - TOKEN
      - ANY
      - REQUEST
      - NONE
    ProtocolAlgorithms:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
      example:
        request:
          signature:
            scope: RESPONSE
            algorithm: algorithm
        response: null
    ProtocolEndpoint:
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        destination:
          type: string
        type:
          $ref: '#/components/schemas/ProtocolEndpointType'
        url:
          type: string
      example:
        destination: destination
        binding: HTTP-POST
        type: INSTANCE
        url: url
    ProtocolEndpointBinding:
      type: string
      enum:
      - HTTP-POST
      - HTTP-REDIRECT
    ProtocolEndpointType:
      type: string
      enum:
      - INSTANCE
      - ORG
    ProtocolEndpoints:
      type: object
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
      example:
        acs:
          destination: destination
          binding: HTTP-POST
          type: INSTANCE
          url: url
        authorization: null
        userInfo: null
        metadata: null
        jwks: null
        slo: null
        sso: null
        token: null
    ProtocolRelayState:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/ProtocolRelayStateFormat'
      example:
        format: OPAQUE
    ProtocolRelayStateFormat:
      type: string
      enum:
      - OPAQUE
      - FROM_URL
    ProtocolSettings:
      type: object
      properties:
        nameFormat:
          type: string
      example:
        nameFormat: nameFormat
    ProtocolType:
      type: string
      enum:
      - SAML2
      - OIDC
      - OAUTH2
      - MTLS
    Provisioning:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningAction'
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
    ProvisioningAction:
      type: string
      enum:
      - AUTO
      - CALLOUT
      - DISABLED
    ProvisioningConditions:
      type: object
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
    ProvisioningConnection:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        status:
          $ref: '#/components/schemas/ProvisioningConnectionStatus'
      example:
        _links:
          key: {}
        authScheme: TOKEN
        status: DISABLED
    ProvisioningConnectionAuthScheme:
      type: string
      enum:
      - TOKEN
      - UNKNOWN
    ProvisioningConnectionProfile:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        token:
          type: string
    ProvisioningConnectionRequest:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
    ProvisioningConnectionStatus:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - UNKNOWN
    ProvisioningDeprovisionedAction:
      type: string
      enum:
      - NONE
      - REACTIVATE
    ProvisioningDeprovisionedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'
    ProvisioningGroups:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningGroupsAction'
        assignments:
          type: array
          items:
            type: string
        filter:
          type: array
          items:
            type: string
        sourceAttributeName:
          type: string
    ProvisioningGroupsAction:
      type: string
      enum:
      - NONE
      - APPEND
      - SYNC
      - ASSIGN
    ProvisioningSuspendedAction:
      type: string
      enum:
      - NONE
      - UNSUSPEND
    ProvisioningSuspendedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningSuspendedAction'
    PushUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          expiresAt:
            type: string
            format: date-time
          factorResult:
            $ref: '#/components/schemas/FactorResultType'
          profile:
            $ref: '#/components/schemas/PushUserFactorProfile'
    PushUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
        deviceToken:
          type: string
        deviceType:
          type: string
        name:
          type: string
        platform:
          type: string
        version:
          type: string
    RecoveryQuestionCredential:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
      example:
        answer: answer
        question: question
    RequiredEnum:
      type: string
      enum:
      - ALWAYS
      - HIGH_RISK_ONLY
      - NEVER
    ResetPasswordToken:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
      example:
        resetPasswordUrl: resetPasswordUrl
    ResponseLinks:
      type: object
    RiskPolicyRuleCondition:
      type: object
      properties:
        behaviors:
          uniqueItems: true
          type: array
          items:
            type: string
      example:
        behaviors:
        - behaviors
        - behaviors
    RiskScorePolicyRuleCondition:
      type: object
      properties:
        level:
          type: string
      example:
        level: level
    Role:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/RoleType'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
        type: SUPER_ADMIN
        assignmentType: GROUP
        status: ACTIVE
    RoleAssignmentType:
      type: string
      enum:
      - GROUP
      - USER
    RoleType:
      type: string
      enum:
      - SUPER_ADMIN
      - ORG_ADMIN
      - APP_ADMIN
      - USER_ADMIN
      - HELP_DESK_ADMIN
      - READ_ONLY_ADMIN
      - MOBILE_ADMIN
      - API_ACCESS_MANAGEMENT_ADMIN
      - REPORT_ADMIN
      - GROUP_MEMBERSHIP_ADMIN
    SamlApplication:
      discriminator:
        propertyName: Name
        mapping:
          okta_org2org: '#/components/schemas/Org2OrgApplication'
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          settings:
            $ref: '#/components/schemas/SamlApplicationSettings'
    SamlApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          signOn:
            $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
    SamlApplicationSettingsSignOn:
      type: object
      properties:
        allowMultipleAcsEndpoints:
          type: boolean
        acsEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/AcsEndpoint'
        assertionSigned:
          type: boolean
        attributeStatements:
          type: array
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          type: array
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
    SamlAttributeStatement:
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        filterType:
          type: string
        filterValue:
          type: string
        values:
          type: array
          items:
            type: string
    ScheduledUserLifecycleAction:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PolicyUserStatus'
      example:
        status: ACTIVE
    SchemeApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - type: object
        properties:
          password:
            $ref: '#/components/schemas/PasswordCredential'
          revealPassword:
            type: boolean
          scheme:
            $ref: '#/components/schemas/ApplicationCredentialsScheme'
          signing:
            $ref: '#/components/schemas/ApplicationCredentialsSigning'
          userName:
            type: string
    SecurePasswordStoreApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            type: string
            default: template_sps
          settings:
            $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
      x-okta-defined-as:
        name: template_sps
    SecurePasswordStoreApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
    SecurePasswordStoreApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          optionalField1:
            type: string
          optionalField1Value:
            type: string
          optionalField2:
            type: string
          optionalField2Value:
            type: string
          optionalField3:
            type: string
          optionalField3Value:
            type: string
          passwordField:
            type: string
          url:
            type: string
          usernameField:
            type: string
    SecurityQuestion:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      example:
        answer: answer
        question: question
        questionText: questionText
    SecurityQuestionUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
    SecurityQuestionUserFactorProfile:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
    SeedEnum:
      type: string
      enum:
      - OKTA
      - RANDOM
    Session:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        amr:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          type: string
          format: date-time
          readOnly: true
        lastPasswordVerification:
          type: string
          format: date-time
          readOnly: true
        login:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/SessionStatus'
        userId:
          type: string
          readOnly: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastFactorVerification: 2000-01-23T04:56:07.000+00:00
        idp:
          id: id
          type: ACTIVE_DIRECTORY
        _links:
          key: {}
        amr:
        - pwd
        - pwd
        id: id
        login: login
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastPasswordVerification: 2000-01-23T04:56:07.000+00:00
        status: ACTIVE
    SessionAuthenticationMethod:
      type: string
      enum:
      - pwd
      - swk
      - hwk
      - otp
      - sms
      - tel
      - geo
      - fpt
      - kba
      - mfa
    SessionIdentityProvider:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
      example:
        id: id
        type: ACTIVE_DIRECTORY
    SessionIdentityProviderType:
      type: string
      enum:
      - ACTIVE_DIRECTORY
      - LDAP
      - OKTA
      - FEDERATION
      - SOCIAL
    SessionStatus:
      type: string
      enum:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
    SignInPageTouchPointVariant:
      type: string
      enum:
      - OKTA_DEFAULT
      - BACKGROUND_SECONDARY_COLOR
      - BACKGROUND_IMAGE
    SignOnInlineHook:
      properties:
        id:
          type: string
          readOnly: false
    SingleLogout:
      type: object
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
    SmsTemplate:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
      example:
        template: template
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        translations: {}
        name: name
        id: id
        type: SMS_VERIFY_CODE
    SmsTemplateTranslations:
      type: object
      x-okta-extensible: true
    SmsTemplateType:
      type: string
      enum:
      - SMS_VERIFY_CODE
    SmsUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/SmsUserFactorProfile'
    SmsUserFactorProfile:
      type: object
      properties:
        phoneNumber:
          type: string
    SocialAuthToken:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
      example:
        id: id
        scopes:
        - scopes
        - scopes
        tokenType: tokenType
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tokenAuthScheme: tokenAuthScheme
        token: token
    SpCertificate:
      type: object
      properties:
        x5c:
          type: array
          items:
            type: string
    Subscription:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        channels:
          type: array
          items:
            type: string
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
      example:
        channels:
        - channels
        - channels
        _links:
          key: {}
        notificationType: CONNECTOR_AGENT
        status: subscribed
    SubscriptionStatus:
      type: string
      enum:
      - subscribed
      - unsubscribed
    SwaApplication:
      allOf:
      - $ref: '#/components/schemas/BrowserPluginApplication'
      - type: object
        properties:
          name:
            type: string
            default: template_swa
          settings:
            $ref: '#/components/schemas/SwaApplicationSettings'
      x-okta-defined-as:
        name: template_swa
    SwaApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/SwaApplicationSettingsApplication'
    SwaApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          buttonField:
            type: string
          checkbox:
            type: string
          loginUrlRegex:
            type: string
          passwordField:
            type: string
          redirectUrl:
            type: string
          url:
            type: string
          usernameField:
            type: string
    SwaThreeFieldApplication:
      allOf:
      - $ref: '#/components/schemas/BrowserPluginApplication'
      - type: object
        properties:
          name:
            type: string
            default: template_swa3field
          settings:
            $ref: '#/components/schemas/SwaThreeFieldApplicationSettings'
      x-okta-defined-as:
        name: template_swa3field
    SwaThreeFieldApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/SwaThreeFieldApplicationSettingsApplication'
    SwaThreeFieldApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          buttonSelector:
            type: string
          extraFieldSelector:
            type: string
          extraFieldValue:
            type: string
          loginUrlRegex:
            type: string
          passwordSelector:
            type: string
          targetURL:
            type: string
          userNameSelector:
            type: string
    TempPassword:
      type: object
      properties:
        tempPassword:
          type: string
          readOnly: true
      example:
        tempPassword: tempPassword
    Theme:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        backgroundImage:
          type: string
          readOnly: true
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
    ThemeResponse:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
          readOnly: true
        backgroundImage:
          type: string
          readOnly: true
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        favicon:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        logo:
          type: string
          readOnly: true
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
      example:
        primaryColorContrastHex: primaryColorContrastHex
        _links:
          key: {}
        favicon: favicon
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        signInPageTouchPointVariant: OKTA_DEFAULT
        logo: logo
        id: id
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
    ThreatInsightConfiguration:
      type: object
      properties:
        action:
          type: string
        excludeZones:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: {}
        created: 2000-01-23T04:56:07.000+00:00
        excludeZones:
        - excludeZones
        - excludeZones
        action: action
    TokenAuthorizationServerPolicyRuleAction:
      type: object
      properties:
        accessTokenLifetimeMinutes:
          type: integer
        refreshTokenLifetimeMinutes:
          type: integer
        refreshTokenWindowMinutes:
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      type: object
      properties:
        id:
          type: string
          readOnly: false
    TokenUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/TokenUserFactorProfile'
    TokenUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TotpUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/TotpUserFactorProfile'
    TotpUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TrustedOrigin:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
        status:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        _links:
          key: {}
        createdBy: createdBy
        created: 2000-01-23T04:56:07.000+00:00
        origin: origin
        name: name
        id: id
        scopes:
        - stringValue: stringValue
          type: CORS
        - stringValue: stringValue
          type: CORS
        status: status
    TrustedOriginScope:
      type: object
      properties:
        stringValue:
          type: string
        type:
          $ref: '#/components/schemas/TrustedOriginScopeType'
      example:
        stringValue: stringValue
        type: CORS
    TrustedOriginScopeType:
      type: string
      enum:
      - CORS
      - REDIRECT
    U2fUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/U2fUserFactorProfile'
    U2fUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    User:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        activated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          format: date-time
          readOnly: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          format: date-time
          readOnly: true
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        transitioningToStatus: null
        _links:
          key: {}
        credentials:
          password:
            hook:
              type: type
            value: ""
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: BCRYPT
          provider:
            name: name
            type: ACTIVE_DIRECTORY
          recovery_question:
            answer: answer
            question: question
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastUpdatedBy: lastUpdatedBy
          default: true
          _links:
            key: {}
          createdBy: createdBy
          created: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          id: id
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        activated: 2000-01-23T04:56:07.000+00:00
        status: ACTIVE
    UserActivationToken:
      type: object
      properties:
        activationToken:
          type: string
          readOnly: true
        activationUrl:
          type: string
          readOnly: true
      example:
        activationUrl: activationUrl
        activationToken: activationToken
    UserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
    UserCredentials:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      example:
        password:
          hook:
            type: type
          value: ""
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: BCRYPT
        provider:
          name: name
          type: ACTIVE_DIRECTORY
        recovery_question:
          answer: answer
          question: question
    UserFactor:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        provider:
          $ref: '#/components/schemas/FactorProvider'
        status:
          $ref: '#/components/schemas/FactorStatus'
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: {}
        _links:
          key: {}
        provider: OKTA
        created: 2000-01-23T04:56:07.000+00:00
        factorType: call
        verify:
          attestation: attestation
          answer: answer
          nextPassCode: nextPassCode
          stateToken: stateToken
          clientData: clientData
          passCode: passCode
          registrationData: registrationData
          activationToken: activationToken
        id: id
        status: PENDING_ACTIVATION
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/CallUserFactor'
          email: '#/components/schemas/EmailUserFactor'
          push: '#/components/schemas/PushUserFactor'
          question: '#/components/schemas/SecurityQuestionUserFactor'
          sms: '#/components/schemas/SmsUserFactor'
          token: '#/components/schemas/TokenUserFactor'
          token:hardware: '#/components/schemas/HardwareUserFactor'
          token:hotp: '#/components/schemas/CustomHotpUserFactor'
          token:software:totp: '#/components/schemas/TotpUserFactor'
          u2f: '#/components/schemas/U2fUserFactor'
          web: '#/components/schemas/WebUserFactor'
          webauthn: '#/components/schemas/WebAuthnUserFactor'
          hotp: '#/components/schemas/CustomHotpUserFactor'
    UserIdString:
      type: object
      properties:
        userId:
          type: string
    UserIdentifierConditionEvaluatorPattern:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/UserIdentifierMatchType'
        value:
          type: string
      example:
        matchType: SUFFIX
        value: value
    UserIdentifierMatchType:
      type: string
      enum:
      - SUFFIX
      - EXPRESSION
      - STARTS_WITH
      - EQUALS
      - CONTAINS
    UserIdentifierPolicyRuleCondition:
      type: object
      properties:
        attribute:
          type: string
        patterns:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
        type:
          $ref: '#/components/schemas/UserIdentifierType'
      example:
        patterns:
        - matchType: SUFFIX
          value: value
        - matchType: SUFFIX
          value: value
        attribute: attribute
        type: IDENTIFIER
    UserIdentifierType:
      type: string
      enum:
      - IDENTIFIER
      - ATTRIBUTE
    UserIdentityProviderLinkRequest:
      type: object
      properties:
        externalId:
          type: string
    UserLifecycleAttributePolicyRuleCondition:
      type: object
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
      example:
        matchingValue: matchingValue
        attributeName: attributeName
    UserNextLogin:
      type: string
      enum:
      - changePassword
    UserPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          type: array
          items:
            type: string
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
      example:
        userLifecycleAttribute:
          matchingValue: matchingValue
          attributeName: attributeName
        include:
        - include
        - include
        passwordExpiration:
          number: 5
          unit: unit
        lifecycleExpiration:
          number: 1
          unit: unit
          lifecycleStatus: lifecycleStatus
        inactivity:
          number: 6
          unit: unit
        exclude:
        - exclude
        - exclude
    UserProfile:
      type: object
      properties:
        city:
          type: string
        costCenter:
          type: string
        countryCode:
          type: string
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          type: string
        employeeNumber:
          type: string
        firstName:
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          type: string
        locale:
          type: string
        login:
          type: string
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          type: string
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
        preferredLanguage:
          type: string
        primaryPhone:
          type: string
        profileUrl:
          type: string
        secondEmail:
          type: string
        state:
          type: string
        streetAddress:
          type: string
        timezone:
          type: string
        title:
          type: string
        userType:
          type: string
        zipCode:
          type: string
      example:
        profileUrl: profileUrl
        lastName: lastName
        zipCode: zipCode
        preferredLanguage: preferredLanguage
        city: city
        displayName: displayName
        timezone: timezone
        locale: locale
        login: login
        title: title
        employeeNumber: employeeNumber
        division: division
        honorificSuffix: honorificSuffix
        countryCode: countryCode
        state: state
        department: department
        email: email
        manager: manager
        costCenter: costCenter
        nickName: nickName
        secondEmail: secondEmail
        honorificPrefix: honorificPrefix
        managerId: managerId
        firstName: firstName
        primaryPhone: primaryPhone
        postalAddress: postalAddress
        mobilePhone: mobilePhone
        streetAddress: streetAddress
        organization: organization
        middleName: middleName
        userType: userType
      x-okta-extensible: true
    UserSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        $schema:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        title:
          type: string
        lastUpdated:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        type:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: {}
        created: created
        name: name
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key: null
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              profileUrl: null
              lastName: null
              zipCode: null
              preferredLanguage: null
              city: null
              displayName: null
              timezone: null
              login:
                minLength: 0
                pattern: pattern
                externalNamespace: externalNamespace
                description: description
                union: DISABLE
                title: title
                type: string
                required: true
                enum:
                - enum
                - enum
                master:
                  type: PROFILE_MASTER
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                scope: SELF
                unique: unique
                externalName: externalName
                mutability: mutability
                items:
                  oneOf:
                  - null
                  - null
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 6
              title: null
              locale: null
              employeeNumber: null
              division: null
              honorificSuffix: null
              countryCode: null
              state: null
              department: null
              email: null
              manager: null
              nickName: null
              costCenter: null
              secondEmail: null
              honorificPrefix: null
              managerId: null
              firstName: null
              primaryPhone: null
              postalAddress: null
              mobilePhone: null
              streetAddress: null
              organization: null
              middleName: null
              userType: null
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
    UserSchemaAttribute:
      type: object
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        required:
          type: boolean
        mutability:
          type: string
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        minLength:
          type: integer
        maxLength:
          type: integer
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        pattern:
          type: string
        unique:
          type: string
        externalName:
          type: string
        externalNamespace:
          type: string
      example:
        minLength: 0
        pattern: pattern
        externalNamespace: externalNamespace
        description: description
        union: DISABLE
        title: title
        type: string
        required: true
        enum:
        - enum
        - enum
        master:
          type: PROFILE_MASTER
          priority:
          - type: type
            value: value
          - type: type
            value: value
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        scope: SELF
        unique: unique
        externalName: externalName
        mutability: mutability
        items:
          oneOf:
          - null
          - null
          type: type
          enum:
          - enum
          - enum
        maxLength: 6
    UserSchemaAttributeEnum:
      type: object
      properties:
        const:
          type: string
        title:
          type: string
      example:
        const: const
        title: title
    UserSchemaAttributeItems:
      type: object
      properties:
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        type:
          type: string
      example:
        oneOf:
        - null
        - null
        type: type
        enum:
        - enum
        - enum
    UserSchemaAttributeMaster:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/UserSchemaAttributeMasterType'
        priority:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
      example:
        type: PROFILE_MASTER
        priority:
        - type: type
          value: value
        - type: type
          value: value
    UserSchemaAttributeMasterPriority:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      example:
        type: type
        value: value
    UserSchemaAttributeMasterType:
      type: string
      enum:
      - PROFILE_MASTER
      - OKTA
      - OVERRIDE
    UserSchemaAttributePermission:
      type: object
      properties:
        principal:
          type: string
        action:
          type: string
      example:
        principal: principal
        action: action
    UserSchemaAttributeScope:
      type: string
      enum:
      - SELF
      - NONE
    UserSchemaAttributeType:
      type: string
      enum:
      - string
      - boolean
      - number
      - integer
      - array
    UserSchemaAttributeUnion:
      type: string
      enum:
      - DISABLE
      - ENABLE
    UserSchemaBase:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          type: array
          items:
            type: string
      example:
        id: id
        type: type
        properties:
          profileUrl: null
          lastName: null
          zipCode: null
          preferredLanguage: null
          city: null
          displayName: null
          timezone: null
          login:
            minLength: 0
            pattern: pattern
            externalNamespace: externalNamespace
            description: description
            union: DISABLE
            title: title
            type: string
            required: true
            enum:
            - enum
            - enum
            master:
              type: PROFILE_MASTER
              priority:
              - type: type
                value: value
              - type: type
                value: value
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            scope: SELF
            unique: unique
            externalName: externalName
            mutability: mutability
            items:
              oneOf:
              - null
              - null
              type: type
              enum:
              - enum
              - enum
            maxLength: 6
          title: null
          locale: null
          employeeNumber: null
          division: null
          honorificSuffix: null
          countryCode: null
          state: null
          department: null
          email: null
          manager: null
          nickName: null
          costCenter: null
          secondEmail: null
          honorificPrefix: null
          managerId: null
          firstName: null
          primaryPhone: null
          postalAddress: null
          mobilePhone: null
          streetAddress: null
          organization: null
          middleName: null
          userType: null
        required:
        - required
        - required
    UserSchemaBaseProperties:
      type: object
      properties:
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
      example:
        profileUrl: null
        lastName: null
        zipCode: null
        preferredLanguage: null
        city: null
        displayName: null
        timezone: null
        login:
          minLength: 0
          pattern: pattern
          externalNamespace: externalNamespace
          description: description
          union: DISABLE
          title: title
          type: string
          required: true
          enum:
          - enum
          - enum
          master:
            type: PROFILE_MASTER
            priority:
            - type: type
              value: value
            - type: type
              value: value
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          scope: SELF
          unique: unique
          externalName: externalName
          mutability: mutability
          items:
            oneOf:
            - null
            - null
            type: type
            enum:
            - enum
            - enum
          maxLength: 6
        title: null
        locale: null
        employeeNumber: null
        division: null
        honorificSuffix: null
        countryCode: null
        state: null
        department: null
        email: null
        manager: null
        nickName: null
        costCenter: null
        secondEmail: null
        honorificPrefix: null
        managerId: null
        firstName: null
        primaryPhone: null
        postalAddress: null
        mobilePhone: null
        streetAddress: null
        organization: null
        middleName: null
        userType: null
    UserSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
      example:
        custom:
          id: id
          type: type
          properties:
            key: null
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            profileUrl: null
            lastName: null
            zipCode: null
            preferredLanguage: null
            city: null
            displayName: null
            timezone: null
            login:
              minLength: 0
              pattern: pattern
              externalNamespace: externalNamespace
              description: description
              union: DISABLE
              title: title
              type: string
              required: true
              enum:
              - enum
              - enum
              master:
                type: PROFILE_MASTER
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              scope: SELF
              unique: unique
              externalName: externalName
              mutability: mutability
              items:
                oneOf:
                - null
                - null
                type: type
                enum:
                - enum
                - enum
              maxLength: 6
            title: null
            locale: null
            employeeNumber: null
            division: null
            honorificSuffix: null
            countryCode: null
            state: null
            department: null
            email: null
            manager: null
            nickName: null
            costCenter: null
            secondEmail: null
            honorificPrefix: null
            managerId: null
            firstName: null
            primaryPhone: null
            postalAddress: null
            mobilePhone: null
            streetAddress: null
            organization: null
            middleName: null
            userType: null
          required:
          - required
          - required
    UserSchemaProperties:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
      example:
        profile:
          allOf:
          - $ref: $ref
          - $ref: $ref
    UserSchemaPropertiesProfile:
      type: object
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
      example:
        allOf:
        - $ref: $ref
        - $ref: $ref
    UserSchemaPropertiesProfileItem:
      type: object
      properties:
        $ref:
          type: string
      example:
        $ref: $ref
    UserSchemaPublic:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
        required:
          type: array
          items:
            type: string
      example:
        id: id
        type: type
        properties:
          key: null
        required:
        - required
        - required
    UserStatus:
      type: string
      enum:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
    UserStatusPolicyRuleCondition:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PolicyUserStatus'
      example:
        value: null
    UserType:
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        default:
          type: boolean
          readOnly: true
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        name:
          type: string
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        default: true
        _links:
          key: {}
        createdBy: createdBy
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        description: description
        id: id
    UserTypeCondition:
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    UserVerificationEnum:
      type: string
      enum:
      - REQUIRED
      - PREFERRED
    VerificationMethod:
      type: object
      properties:
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
        factorMode:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
    VerifyFactorRequest:
      type: object
      properties:
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      example:
        attestation: attestation
        answer: answer
        nextPassCode: nextPassCode
        stateToken: stateToken
        clientData: clientData
        passCode: passCode
        registrationData: registrationData
        activationToken: activationToken
    VerifyUserFactorResponse:
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        factorResult:
          $ref: '#/components/schemas/VerifyUserFactorResult'
        factorResultMessage:
          type: string
      example:
        factorResultMessage: factorResultMessage
        _embedded:
          key: {}
        _links:
          key: {}
        factorResult: SUCCESS
        expiresAt: 2000-01-23T04:56:07.000+00:00
    VerifyUserFactorResult:
      type: string
      enum:
      - SUCCESS
      - EXPIRED
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
    WebAuthnUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/WebAuthnUserFactorProfile'
    WebAuthnUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
        authenticatorName:
          type: string
    WebUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - type: object
        properties:
          profile:
            $ref: '#/components/schemas/WebUserFactorProfile'
    WebUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    WsFederationApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - type: object
        properties:
          name:
            type: string
            default: template_wsfed
          settings:
            $ref: '#/components/schemas/WsFederationApplicationSettings'
      x-okta-defined-as:
        name: template_wsfed
    WsFederationApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - type: object
        properties:
          app:
            $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
    WsFederationApplicationSettingsApplication:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsApplication'
      - type: object
        properties:
          attributeStatements:
            type: string
          audienceRestriction:
            type: string
          authnContextClassRef:
            type: string
          groupFilter:
            type: string
          groupName:
            type: string
          groupValueFormat:
            type: string
          nameIDFormat:
            type: string
          realm:
            type: string
          siteURL:
            type: string
          usernameAttribute:
            type: string
          wReplyOverride:
            type: boolean
          wReplyURL:
            type: string
    lifecycle_publish_body:
      oneOf:
      - type: string
        format: binary
        x-okta-operationId: publishBinaryCerCert
      - type: string
        format: base64
        x-okta-operationId: publishBase64CerCert
    lifecycle_publish_body_1:
      oneOf:
      - type: string
        format: binary
        x-okta-operationId: publishBinaryDerCert
      - type: string
        format: base64
        x-okta-operationId: publishBase64DerCert
    appId_logo_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          format: binary
    lifecycle_publish_body_2:
      oneOf:
      - type: string
        format: binary
        x-okta-operationId: publishBinaryCerCertForIdentityProvider
      - type: string
        format: base64
        x-okta-operationId: publishBase64CerCertForIdentityProvider
    lifecycle_publish_body_3:
      oneOf:
      - type: string
        format: binary
        x-okta-operationId: publishBinaryDerCertForIdentityProvider
      - type: string
        format: base64
        x-okta-operationId: publishBase64DerCertForIdentityProvider
    CAPTCHAInstance__link:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      example:
        self:
          hints:
            allow:
            - GET
            - GET
          href: href
    EmailCustomizationResponse__links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        template:
          $ref: '#/components/schemas/HrefObject'
        preview:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      example: null
    EmailPreview__links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        contentSource:
          $ref: '#/components/schemas/HrefObject'
        template:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      example: null
    EmailTemplate__links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        customizations:
          $ref: '#/components/schemas/HrefObject'
        defaultContent:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      example: null
    Error_errorCauses:
      type: object
      properties:
        errorSummary:
          type: string
      example: null
    HrefObject_hints:
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
      example:
        allow:
        - GET
        - GET
  parameters:
    brandId:
      name: brandId
      in: path
      description: brand id
      required: true
      style: simple
      explode: false
      schema:
        type: string
    customizationId:
      name: customizationId
      in: path
      description: email customization id
      required: true
      style: simple
      explode: false
      schema:
        type: string
    pathCaptchaId:
      name: captchaId
      in: path
      description: id of the CAPTCHA
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: abcd1234
    templateName:
      name: templateName
      in: path
      description: email template name
      required: true
      style: simple
      explode: false
      schema:
        type: string
  examples:
    CAPTCHAInstanceRequestHCaptcha:
      value:
        name: myHCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
    CAPTCHAInstanceRequestReCaptcha:
      value:
        name: myReCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
    CAPTCHAInstanceResponseHCaptcha:
      value:
        id: abcd1234
        name: myHCaptcha
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CAPTCHAInstanceResponseReCaptcha:
      value:
        id: abcd4567
        name: myReCaptcha
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    ErrorApiValidationFailed:
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: {0}"
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorCAPTCHALimitOfOne:
      value:
        errorCode: E0000165
        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is
          allowed per Org.
        errorLink: E0000165
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorCAPTCHAOrgWideSetting:
      value:
        errorCode: E0000149
        errorSummary: "Current CAPTCHA is associated with org-wide settings, cannot\
          \ be removed."
        errorLink: E0000149
        errorId: samplezsusshPdiTWiITwqBt8
        errorCauses: []
    ErrorResourceNotFound:
      value:
        errorCode: E0000007
        errorSummary: "Not found: {0}"
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  securitySchemes:
    api_token:
      type: apiKey
      description: "Pass the API token as the Authorization header value prefixed\
        \ with SSWS: 'Authorizaion: SSWS {API Token}'"
      name: Authorization
      in: header
    oauth2:
      type: oauth2
      description: "Pass the access_token as the value of the Authorization header:\
        \ 'Authorization: {access_token}'"
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          tokenUrl: /oauth2/v1/token
          scopes:
            okta.apps.read: Read Apps.
            okta.apps.manage: Read or modify Apps.
            okta.authenticators.read: Read Authenticators.
            okta.authenticators.manage: Read or modify Authenticators.
            okta.authorizationServers.read: Read Authorization Servers.
            okta.authorizationServers.manage: Read or modify Authorization Servers.
            okta.brands.read: Read Brands.
            okta.brands.manage: Read or modify Brands.
            okta.captchas.manage: Read or modify CAPTCHA instances in your org.
            okta.captchas.read: Read CAPTCHA instances in your org.
            okta.domains.read: Read Domains.
            okta.domains.manage: Read or modify Domains.
            okta.eventHooks.read: Read Event Hooks.
            okta.eventHooks.manage: Read or modify Event Hooks.
            okta.groups.read: Read Groups.
            okta.groups.manage: Read or modify Groups.
            okta.roles.read: Read Roles.
            okta.roles.manage: Read or modify Roles.
            okta.idps.read: Read Identity Providers.
            okta.idps.manage: Read or modify Identity Providers.
            okta.users.manage: Read or modify Users.
            okta.inlineHooks.read: Read Inline Hooks.
            okta.inlineHooks.manage: Read or modify Inline Hooks.
            okta.logs.read: Read Logs.
            okta.profileMappings.read: Read Profile Mappings.
            okta.profileMappings.manage: Read or modify Profile Mappings.
            okta.schemas.read: Read Schemas.
            okta.schemas.manage: Read or modify Schemas.
            okta.linkedObjects.read: Read Linked Objects.
            okta.linkedObjects.manage: Read or modify Linked Objects.
            okta.userTypes.read: Read Usertypes.
            okta.userTypes.manage: Read or modify Usertypes.
            okta.orgs.read: Read Org Settings.
            okta.orgs.manage: Read or modify Org Settings.
            okta.policies.read: Read Policies.
            okta.policies.manage: Read or modify Policies.
            okta.sessions.read: Read Sessions.
            okta.sessions.manage: Read or modify Sessions.
            okta.templates.read: Read Templates.
            okta.templates.manage: Read or modify Templates.
            okta.trustedOrigins.read: Read Trusted Origins.
            okta.trustedOrigins.manage: Read or modify Trusted Origins.
            okta.users.read.self: Read Users.
            okta.users.read: Read Users.
