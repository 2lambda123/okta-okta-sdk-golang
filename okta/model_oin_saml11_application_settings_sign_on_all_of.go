/*
Okta Admin Management

Allows customers to easily access the Okta Management APIs

Copyright 2018 - Present Okta, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

API version: 5.1.0
Contact: devex-public@okta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
package okta

import (
	"encoding/json"
)

// OINSaml11ApplicationSettingsSignOnAllOf Contains the sign-in attributes available when configuring an app with `SAML_1_1` as the `signOnMode`
type OINSaml11ApplicationSettingsSignOnAllOf struct {
	SignOnMode interface{} `json:"signOnMode,omitempty"`
	// Identifies a specific application resource in an IDP-initiated SSO scenario
	DefaultRelayState *string `json:"defaultRelayState,omitempty"`
	// Assertion Consumer Service URL override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)
	SsoAcsUrlOverride *string `json:"ssoAcsUrlOverride,omitempty"`
	// Audience override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)
	AudienceOverride *string `json:"audienceOverride,omitempty"`
	// Recipient override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm)
	RecipientOverride    *string `json:"recipientOverride,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OINSaml11ApplicationSettingsSignOnAllOf OINSaml11ApplicationSettingsSignOnAllOf

// NewOINSaml11ApplicationSettingsSignOnAllOf instantiates a new OINSaml11ApplicationSettingsSignOnAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOINSaml11ApplicationSettingsSignOnAllOf() *OINSaml11ApplicationSettingsSignOnAllOf {
	this := OINSaml11ApplicationSettingsSignOnAllOf{}
	return &this
}

// NewOINSaml11ApplicationSettingsSignOnAllOfWithDefaults instantiates a new OINSaml11ApplicationSettingsSignOnAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOINSaml11ApplicationSettingsSignOnAllOfWithDefaults() *OINSaml11ApplicationSettingsSignOnAllOf {
	this := OINSaml11ApplicationSettingsSignOnAllOf{}
	return &this
}

// GetSignOnMode returns the SignOnMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetSignOnMode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SignOnMode
}

// GetSignOnModeOk returns a tuple with the SignOnMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetSignOnModeOk() (*interface{}, bool) {
	if o == nil || o.SignOnMode == nil {
		return nil, false
	}
	return &o.SignOnMode, true
}

// HasSignOnMode returns a boolean if a field has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) HasSignOnMode() bool {
	if o != nil && o.SignOnMode != nil {
		return true
	}

	return false
}

// SetSignOnMode gets a reference to the given interface{} and assigns it to the SignOnMode field.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) SetSignOnMode(v interface{}) {
	o.SignOnMode = v
}

// GetDefaultRelayState returns the DefaultRelayState field value if set, zero value otherwise.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetDefaultRelayState() string {
	if o == nil || o.DefaultRelayState == nil {
		var ret string
		return ret
	}
	return *o.DefaultRelayState
}

// GetDefaultRelayStateOk returns a tuple with the DefaultRelayState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetDefaultRelayStateOk() (*string, bool) {
	if o == nil || o.DefaultRelayState == nil {
		return nil, false
	}
	return o.DefaultRelayState, true
}

// HasDefaultRelayState returns a boolean if a field has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) HasDefaultRelayState() bool {
	if o != nil && o.DefaultRelayState != nil {
		return true
	}

	return false
}

// SetDefaultRelayState gets a reference to the given string and assigns it to the DefaultRelayState field.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) SetDefaultRelayState(v string) {
	o.DefaultRelayState = &v
}

// GetSsoAcsUrlOverride returns the SsoAcsUrlOverride field value if set, zero value otherwise.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetSsoAcsUrlOverride() string {
	if o == nil || o.SsoAcsUrlOverride == nil {
		var ret string
		return ret
	}
	return *o.SsoAcsUrlOverride
}

// GetSsoAcsUrlOverrideOk returns a tuple with the SsoAcsUrlOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetSsoAcsUrlOverrideOk() (*string, bool) {
	if o == nil || o.SsoAcsUrlOverride == nil {
		return nil, false
	}
	return o.SsoAcsUrlOverride, true
}

// HasSsoAcsUrlOverride returns a boolean if a field has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) HasSsoAcsUrlOverride() bool {
	if o != nil && o.SsoAcsUrlOverride != nil {
		return true
	}

	return false
}

// SetSsoAcsUrlOverride gets a reference to the given string and assigns it to the SsoAcsUrlOverride field.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) SetSsoAcsUrlOverride(v string) {
	o.SsoAcsUrlOverride = &v
}

// GetAudienceOverride returns the AudienceOverride field value if set, zero value otherwise.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetAudienceOverride() string {
	if o == nil || o.AudienceOverride == nil {
		var ret string
		return ret
	}
	return *o.AudienceOverride
}

// GetAudienceOverrideOk returns a tuple with the AudienceOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetAudienceOverrideOk() (*string, bool) {
	if o == nil || o.AudienceOverride == nil {
		return nil, false
	}
	return o.AudienceOverride, true
}

// HasAudienceOverride returns a boolean if a field has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) HasAudienceOverride() bool {
	if o != nil && o.AudienceOverride != nil {
		return true
	}

	return false
}

// SetAudienceOverride gets a reference to the given string and assigns it to the AudienceOverride field.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) SetAudienceOverride(v string) {
	o.AudienceOverride = &v
}

// GetRecipientOverride returns the RecipientOverride field value if set, zero value otherwise.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetRecipientOverride() string {
	if o == nil || o.RecipientOverride == nil {
		var ret string
		return ret
	}
	return *o.RecipientOverride
}

// GetRecipientOverrideOk returns a tuple with the RecipientOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) GetRecipientOverrideOk() (*string, bool) {
	if o == nil || o.RecipientOverride == nil {
		return nil, false
	}
	return o.RecipientOverride, true
}

// HasRecipientOverride returns a boolean if a field has been set.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) HasRecipientOverride() bool {
	if o != nil && o.RecipientOverride != nil {
		return true
	}

	return false
}

// SetRecipientOverride gets a reference to the given string and assigns it to the RecipientOverride field.
func (o *OINSaml11ApplicationSettingsSignOnAllOf) SetRecipientOverride(v string) {
	o.RecipientOverride = &v
}

func (o OINSaml11ApplicationSettingsSignOnAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SignOnMode != nil {
		toSerialize["signOnMode"] = o.SignOnMode
	}
	if o.DefaultRelayState != nil {
		toSerialize["defaultRelayState"] = o.DefaultRelayState
	}
	if o.SsoAcsUrlOverride != nil {
		toSerialize["ssoAcsUrlOverride"] = o.SsoAcsUrlOverride
	}
	if o.AudienceOverride != nil {
		toSerialize["audienceOverride"] = o.AudienceOverride
	}
	if o.RecipientOverride != nil {
		toSerialize["recipientOverride"] = o.RecipientOverride
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *OINSaml11ApplicationSettingsSignOnAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varOINSaml11ApplicationSettingsSignOnAllOf := _OINSaml11ApplicationSettingsSignOnAllOf{}

	err = json.Unmarshal(bytes, &varOINSaml11ApplicationSettingsSignOnAllOf)
	if err == nil {
		*o = OINSaml11ApplicationSettingsSignOnAllOf(varOINSaml11ApplicationSettingsSignOnAllOf)
	} else {
		return err
	}

	additionalProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &additionalProperties)
	if err == nil {
		delete(additionalProperties, "signOnMode")
		delete(additionalProperties, "defaultRelayState")
		delete(additionalProperties, "ssoAcsUrlOverride")
		delete(additionalProperties, "audienceOverride")
		delete(additionalProperties, "recipientOverride")
		o.AdditionalProperties = additionalProperties
	} else {
		return err
	}

	return err
}

type NullableOINSaml11ApplicationSettingsSignOnAllOf struct {
	value *OINSaml11ApplicationSettingsSignOnAllOf
	isSet bool
}

func (v NullableOINSaml11ApplicationSettingsSignOnAllOf) Get() *OINSaml11ApplicationSettingsSignOnAllOf {
	return v.value
}

func (v *NullableOINSaml11ApplicationSettingsSignOnAllOf) Set(val *OINSaml11ApplicationSettingsSignOnAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOINSaml11ApplicationSettingsSignOnAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOINSaml11ApplicationSettingsSignOnAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOINSaml11ApplicationSettingsSignOnAllOf(val *OINSaml11ApplicationSettingsSignOnAllOf) *NullableOINSaml11ApplicationSettingsSignOnAllOf {
	return &NullableOINSaml11ApplicationSettingsSignOnAllOf{value: val, isSet: true}
}

func (v NullableOINSaml11ApplicationSettingsSignOnAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOINSaml11ApplicationSettingsSignOnAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
